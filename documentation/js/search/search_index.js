var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.708,1,2.229]],["body/controllers/AppController.html",[0,2.835,1,3.701,2,2.732,3,0.286,4,0.244,5,0.244,6,3.818,7,0.567,8,2.111,9,5.307,10,1.219,11,0.026,12,0.675,13,4.521,14,1.716,15,1.4,16,0.352,17,1.305,18,3.333,19,3.818,20,0.286,21,0.31,22,2.732,23,4.521,24,2.305,25,4.521,26,0.017,27,0.021,28,0.017]],["title/modules/AppModule.html",[29,1.467,30,2.229]],["body/modules/AppModule.html",[1,2.705,2,2.457,3,0.179,4,0.153,5,0.153,8,1.074,11,0.027,12,0.422,14,1.074,16,0.421,17,0.817,18,3.175,19,2.389,20,0.179,21,0.194,26,0.011,27,0.016,28,0.011,29,2.084,30,4.381,31,1.442,32,1.882,33,2.389,34,2.389,35,1.882,36,4.018,37,2.389,38,2.389,39,2.389,40,2.389,41,3.467,42,3.467,43,2.925,44,2.092,45,2.81,46,3.433,47,2.389,48,2.389,49,2.829,50,2.457,51,2.876,52,4.065,53,2.829,54,4.065,55,5.203,56,2.829,57,1.334,58,1.334,59,0.496,60,1.334,61,4.759,62,2.099,63,2.829,64,4.759,65,2.829,66,2.829,67,2.829,68,2.829,69,2.829,70,2.829,71,1.442,72,1.709,73,1.709,74,2.829,75,2.829,76,2.829,77,1.442,78,2.099,79,2.829,80,2.829,81,1.334,82,1.709,83,1.334,84,1.709,85,1.709,86,2.389,87,1.709,88,2.389,89,1.882,90,2.829,91,2.829,92,2.829,93,2.829,94,2.829,95,2.829,96,2.829,97,2.829,98,2.829,99,2.829]],["title/injectables/AppService.html",[18,1.854,100,1.035]],["body/injectables/AppService.html",[3,0.298,4,0.254,5,0.254,7,0.59,8,2.164,9,5.38,11,0.026,12,0.703,14,1.787,15,1.435,16,0.298,17,1.359,18,3.154,20,0.298,21,0.323,24,2.4,26,0.018,27,0.022,28,0.018,100,1.761,101,2.4,102,3.974,103,4.707,104,4.707,105,4.707]],["title/classes/Articles.html",[21,0.23,106,1.708]],["body/classes/Articles.html",[3,0.198,4,0.169,5,0.169,7,0.393,10,1.674,11,0.027,12,0.927,15,1.625,16,0.344,20,0.198,21,0.215,26,0.012,27,0.017,28,0.012,59,1.088,106,2.227,107,0.637,108,2.643,109,1.779,110,3.04,111,1.445,112,3.348,113,3.733,114,2.049,115,1.91,116,2.565,117,2.784,118,3.04,119,2.565,120,3.04,121,3.13,122,3.811,123,3.13,124,2.643,125,3.13,126,3.04,127,3.13,128,3.013,129,3.13,130,3.13,131,1.912,132,2.323,133,2.643,134,2.906,135,2.323,136,3.13,137,3.13,138,2.083,139,1.892,140,2.643,141,2.639,142,2.639,143,3.13,144,2.083,145,1.109,146,1.732,147,3.13,148,2.565,149,2.643,150,3.13,151,3.13,152,2.643,153,2.643,154,2.323,155,1.732]],["title/controllers/ArticlesController.html",[0,1.708,51,2.025]],["body/controllers/ArticlesController.html",[0,1.565,2,1.855,3,0.194,4,0.166,5,0.166,7,0.385,8,1.636,10,1.456,11,0.026,12,0.806,14,2.049,16,0.315,17,0.886,20,0.194,21,0.21,22,1.855,24,2.752,26,0.012,27,0.017,28,0.012,43,1.565,51,2.603,57,2.546,58,2.546,59,0.946,60,2.546,106,1.565,114,2.199,156,2.592,157,2.592,158,3.062,159,3.638,160,3.196,161,3.069,162,2.682,163,3.069,164,3.069,165,3.591,166,2.592,167,2.855,168,3.069,169,3.069,170,3.35,171,2.592,172,2.855,173,3.069,174,3.069,175,2.277,176,2.855,177,3.069,178,3.069,179,3.638,180,2.592,181,2.592,182,2.592,183,2.592,184,3.069,185,3.069,186,4.558,187,3.069,188,3.069,189,2.752,190,3.069,191,3.069,192,2.592,193,3.069,194,3.069,195,3.069,196,3.069,197,3.069,198,3.069,199,3.069,200,3.069,201,3.069,202,3.069]],["title/modules/ArticlesModule.html",[29,1.467,41,2.025]],["body/modules/ArticlesModule.html",[3,0.301,4,0.257,5,0.257,11,0.027,16,0.404,17,1.374,20,0.301,21,0.326,26,0.018,27,0.022,28,0.018,29,2.513,31,2.427,41,3.468,43,2.427,44,1.807,51,2.876,71,2.427,182,4.019,203,4.76,204,4.76]],["title/classes/ArticlesRepositry.html",[21,0.23,85,2.025]],["body/classes/ArticlesRepositry.html",[3,0.308,4,0.263,5,0.263,11,0.026,16,0.368,20,0.308,21,0.334,26,0.019,27,0.022,28,0.019,85,3.516,106,2.483,107,0.992,109,2.37,145,1.725,205,4.113,206,3.443,207,2.943,208,4.87,209,4.87]],["title/injectables/ArticlesService.html",[43,1.708,100,1.035]],["body/injectables/ArticlesService.html",[3,0.097,4,0.083,5,0.083,7,0.192,8,0.96,11,0.027,12,0.619,14,1.422,16,0.349,17,0.443,20,0.097,21,0.105,22,0.926,24,1.91,26,0.006,27,0.01,28,0.006,43,1.289,44,1.694,57,1.956,58,1.956,59,0.726,60,1.956,71,0.782,77,0.782,81,2.227,82,0.926,83,1.767,84,0.926,85,2.852,86,1.294,87,2.852,88,1.294,100,0.782,101,0.782,106,2.114,112,1.683,113,1.877,115,0.96,118,0.926,119,1.289,145,0.543,146,1.787,158,2.602,159,2.136,162,1.956,165,3.283,166,2.136,167,2.227,170,1.787,171,2.136,172,2.227,176,2.227,183,1.294,189,2.275,210,1.294,211,2.529,212,2.529,213,1.02,214,1.137,215,2.148,216,1.533,217,1.533,218,2.529,219,1.533,220,2.529,221,1.533,222,1.533,223,3.09,224,0.926,225,0.926,226,1.533,227,1.533,228,1.137,229,2.726,230,1.137,231,1.533,232,1.533,233,1.02,234,2.493,235,1.02,236,1.533,237,1.533,238,2.505,239,1.533,240,3.11,241,1.533,242,1.533,243,2.136,244,1.533,245,2.493,246,1.533,247,1.683,248,1.533,249,1.533,250,1.533,251,1.533,252,5.268,253,1.533,254,3.141,255,2.136,256,3.229,257,2.395,258,3.076,259,3.501,260,3.229,261,3.986,262,2.726,263,3.164,264,4.463,265,3.229,266,1.533,267,1.294,268,2.529,269,3.747,270,1.533,271,1.533,272,1.533,273,1.533,274,1.533,275,3.747,276,3.747,277,3.747,278,3.747,279,2.529,280,1.533,281,2.529,282,1.533,283,3.229,284,1.533,285,2.529,286,1.533,287,2.136,288,1.877,289,2.529,290,2.136,291,2.529,292,1.533,293,1.533,294,1.533,295,2.529,296,1.533,297,1.533,298,1.533,299,0.926,300,1.533,301,1.533,302,1.533,303,1.533,304,2.529,305,1.533,306,2.529,307,1.533,308,2.529,309,1.533,310,1.533,311,1.533,312,1.533,313,1.533,314,1.533,315,1.533,316,1.533,317,1.533,318,1.533,319,2.529,320,1.533,321,1.533]],["title/classes/AuthAutherMiddleware.html",[21,0.23,72,2.025]],["body/classes/AuthAutherMiddleware.html",[3,0.196,4,0.167,5,0.167,7,0.388,8,1.644,11,0.027,12,0.462,14,1.174,16,0.36,17,0.893,20,0.274,21,0.297,26,0.012,27,0.017,28,0.012,44,1.897,57,1.459,58,1.459,59,0.542,60,1.459,62,3.708,71,1.576,72,2.617,73,1.868,77,1.576,81,2.357,82,1.868,83,2.043,84,1.868,100,1.338,107,0.629,158,2.554,170,1.711,189,2.548,213,2.057,215,2.057,223,1.868,224,1.868,225,1.868,233,2.057,234,3.325,235,2.057,238,3.272,240,2.766,254,3.325,322,3.213,323,2.294,324,4.22,325,4.572,326,3.657,327,4.22,328,4.572,329,4.989,330,3.092,331,2.294,332,3.325,333,2.294,334,1.868,335,3.657,336,4.22,337,4.22,338,4.22,339,4.22,340,4.22,341,4.22,342,1.897,343,2.611,344,2.294,345,1.459,346,2.294,347,1.095,348,3.657,349,2.611,350,2.611,351,2.611,352,1.711]],["title/modules/AuthModule.html",[29,1.467,353,2.486]],["body/modules/AuthModule.html",[3,0.32,4,0.274,5,0.274,11,0.026,16,0.32,17,1.463,20,0.32,21,0.347,26,0.019,27,0.023,28,0.019,29,2.607,31,2.583,353,4.418,354,5.066]],["title/injectables/AuthService.html",[100,1.035,355,2.486]],["body/injectables/AuthService.html",[3,0.3,4,0.256,5,0.256,7,0.595,8,2.174,11,0.026,12,0.708,14,1.8,16,0.3,17,1.369,20,0.3,21,0.325,26,0.018,27,0.022,28,0.018,100,1.769,101,2.418,158,2.901,355,4.248,356,4.004,357,6.388,358,4.742]],["title/injectables/AuthUserMiddleware.html",[73,2.025,100,1.035]],["body/injectables/AuthUserMiddleware.html",[3,0.187,4,0.16,5,0.16,7,0.37,8,1.592,11,0.027,12,0.626,14,1.122,16,0.354,17,0.853,20,0.265,21,0.287,26,0.011,27,0.016,28,0.011,44,2.21,57,1.978,58,1.978,59,0.735,60,1.978,62,3.617,71,1.506,72,1.785,73,2.534,77,1.506,81,2.824,82,1.785,83,2.503,84,1.785,100,1.296,101,1.506,158,2.503,170,1.635,189,2.486,213,2.79,214,2.192,215,3.244,223,1.785,224,1.785,225,1.785,233,1.966,234,3.244,235,1.966,238,3.207,240,2.698,254,3.244,322,3.617,323,2.192,324,3.541,325,4.117,326,3.541,327,4.117,328,4.481,329,4.916,331,2.192,332,3.244,333,2.192,334,1.785,335,3.541,336,4.117,337,4.117,338,4.117,339,4.117,340,4.117,341,4.117,342,1.851,343,2.495,344,2.192,345,1.394,346,2.192,347,1.047,348,3.541,349,2.495,350,2.495,351,2.495,352,1.635,359,2.954,360,2.954]],["title/classes/CommentDto.html",[21,0.23,167,1.58]],["body/classes/CommentDto.html",[3,0.198,4,0.169,5,0.169,7,0.393,10,1.544,11,0.026,12,0.855,15,1.728,16,0.198,20,0.344,21,0.392,26,0.012,27,0.017,28,0.012,59,1.003,107,0.637,111,1.445,114,2.218,115,1.188,119,2.227,131,1.371,162,1.477,167,2.06,172,1.477,176,1.477,299,1.892,342,2.252,347,2.028,352,1.732,361,1.892,362,3.013,363,2.798,364,2.701,365,3.13,366,3.13,367,3.13,368,3.13,369,3.13,370,3.177,371,1.477,372,3.81,373,3.216,374,1.371,375,2.083]],["title/classes/Comments.html",[21,0.23,146,1.854]],["body/classes/Comments.html",[3,0.197,4,0.169,5,0.169,7,0.392,10,1.7,11,0.027,12,0.941,15,1.639,16,0.344,20,0.197,21,0.214,26,0.012,27,0.017,28,0.012,59,1.105,106,1.592,107,0.636,109,1.776,110,3.036,111,1.442,112,3.343,114,2.047,115,1.907,116,2.561,117,2.78,118,3.036,120,3.036,122,3.809,124,2.637,126,3.036,128,3.009,131,1.909,132,2.317,133,2.637,134,2.901,135,2.317,138,2.078,139,1.887,140,2.637,141,3.036,142,2.635,144,2.078,145,1.106,146,2.413,148,1.592,149,2.637,152,2.637,153,2.637,154,2.317,155,2.78,345,2.37,376,2.637,377,3.728,378,3.123,379,3.123,380,3.123,381,3.123,382,3.123,383,3.123,384,3.123,385,3.123,386,3.123,387,3.123,388,3.123]],["title/classes/CommentsRepositry.html",[21,0.23,87,2.025]],["body/classes/CommentsRepositry.html",[3,0.308,4,0.263,5,0.263,11,0.026,16,0.368,20,0.308,21,0.334,26,0.019,27,0.022,28,0.019,87,3.516,107,0.992,109,2.37,145,1.725,146,2.695,206,3.443,207,2.943,389,4.113,390,4.87,391,4.87]],["title/classes/CreateDto.html",[21,0.23,176,1.58]],["body/classes/CreateDto.html",[3,0.198,4,0.169,5,0.169,7,0.393,10,1.544,11,0.026,12,0.855,15,1.728,16,0.198,20,0.344,21,0.392,26,0.012,27,0.017,28,0.012,59,1.003,107,0.637,111,1.445,114,2.218,115,1.188,119,2.775,131,1.371,162,1.477,167,1.477,172,1.477,176,2.06,299,1.892,342,2.252,347,2.028,352,1.732,361,1.892,362,2.417,363,2.798,364,2.701,370,3.177,371,1.477,372,3.81,373,3.216,374,1.371,375,2.083,392,3.13,393,3.13,394,3.13,395,3.13,396,3.13]],["title/classes/Devices.html",[21,0.23,397,2.025]],["body/classes/Devices.html",[3,0.214,4,0.183,5,0.183,7,0.425,10,1.707,11,0.026,12,0.945,15,1.634,16,0.292,20,0.214,21,0.232,26,0.013,27,0.018,28,0.013,59,1.109,107,0.69,109,1.88,110,3.171,111,1.527,115,1.992,116,2.675,117,2.904,120,3.171,122,3.958,126,3.171,128,3.364,138,2.256,139,2.049,141,3.171,142,2.789,144,2.256,145,1.201,155,2.904,345,2.475,397,2.789,398,2.864,399,4.431,400,3.893,401,3.893,402,3.391,403,3.391,404,3.391,405,3.391,406,3.391,407,3.391,408,3.391,409,3.391]],["title/classes/DevicesRepositry.html",[21,0.23,83,1.58]],["body/classes/DevicesRepositry.html",[3,0.308,4,0.263,5,0.263,11,0.026,16,0.368,20,0.308,21,0.334,26,0.019,27,0.022,28,0.019,83,2.744,107,0.992,109,2.37,145,1.725,206,3.443,207,2.943,397,2.943,410,4.113,411,4.87,412,4.87]],["title/classes/FindDto.html",[21,0.23,162,1.58]],["body/classes/FindDto.html",[3,0.189,4,0.161,5,0.161,7,0.374,10,1.619,11,0.026,12,0.896,15,1.724,16,0.189,20,0.337,21,0.385,26,0.011,27,0.016,28,0.011,59,1.052,107,0.607,111,1.397,114,1.72,115,1.86,119,2.717,131,1.848,162,1.991,167,1.407,172,1.407,176,1.407,299,2.961,342,2.217,347,1.736,352,2.712,361,1.802,362,2.336,363,2.755,364,2.312,370,3.158,371,1.407,372,3.742,373,3.201,374,1.306,375,3.261,413,5.329,414,2.982,415,2.982,416,2.982,417,2.982,418,2.982,419,2.982,420,2.982]],["title/injectables/HelperService.html",[44,1.272,100,1.035]],["body/injectables/HelperService.html",[3,0.162,4,0.139,5,0.139,7,0.322,8,1.439,11,0.027,12,0.742,14,1.888,16,0.314,17,0.742,20,0.162,21,0.176,24,2.703,26,0.01,27,0.015,28,0.01,44,1.439,57,2.345,58,2.345,60,2.345,77,1.31,100,1.171,101,1.31,158,2.961,189,1.932,223,1.553,224,1.553,225,1.553,228,1.906,230,1.906,238,3.865,247,1.71,258,1.906,287,2.17,288,1.906,344,3.934,347,0.91,421,1.906,422,3.79,423,3.79,424,3.79,425,3.79,426,3.79,427,2.569,428,3.79,429,2.569,430,3.79,431,2.569,432,3.79,433,2.569,434,2.17,435,2.812,436,2.17,437,2.569,438,3.79,439,2.569,440,2.569,441,2.569,442,2.569,443,4.462,444,2.17,445,2.17,446,2.17,447,2.17,448,2.17,449,2.812,450,2.569,451,2.17,452,2.569,453,2.569,454,4.504,455,2.569,456,2.569,457,2.569,458,2.569,459,3.79,460,2.569,461,3.79,462,3.79,463,3.79,464,3.79,465,2.569,466,2.569,467,3.79,468,3.79,469,3.79,470,3.79,471,2.17,472,2.569,473,2.569,474,3.79,475,2.569,476,2.569,477,2.569,478,2.569,479,2.569,480,2.569,481,2.569,482,2.569,483,2.569,484,2.569,485,2.569,486,3.79,487,2.569,488,2.569,489,2.569,490,2.569]],["title/classes/LikeDto.html",[21,0.23,172,1.58]],["body/classes/LikeDto.html",[3,0.203,4,0.173,5,0.173,7,0.403,10,1.484,11,0.026,12,0.822,15,1.729,16,0.203,20,0.348,21,0.396,26,0.012,27,0.017,28,0.012,59,0.964,107,0.653,111,1.47,114,1.811,115,1.219,119,2.266,131,1.405,162,1.514,167,1.514,172,2.097,176,1.514,299,1.94,342,2.269,347,2.047,352,1.776,361,1.94,362,3.046,363,2.82,364,2.596,370,3.186,371,1.514,372,3.845,373,3.224,374,1.405,375,2.136,491,3.21,492,3.21,493,3.21,494,3.21]],["title/classes/LoginDto.html",[21,0.23,495,1.58]],["body/classes/LoginDto.html",[3,0.197,4,0.169,5,0.169,7,0.392,10,1.543,11,0.026,12,0.854,15,1.728,16,0.197,20,0.344,21,0.392,26,0.012,27,0.017,28,0.012,59,1.002,107,0.636,111,1.442,342,2.25,347,1.106,363,2.795,364,2.699,370,3.207,371,1.473,373,3.207,374,1.367,495,2.057,496,2.795,497,1.887,498,2.917,499,3.807,500,2.772,501,3.123,502,3.123,503,3.123,504,3.123,505,3.123,506,1.473,507,1.728,508,1.728,509,1.728,510,1.473,511,1.473]],["title/classes/LogoutDto.html",[21,0.23,511,1.58]],["body/classes/LogoutDto.html",[3,0.209,4,0.178,5,0.178,7,0.414,10,1.396,11,0.026,12,0.773,15,1.729,16,0.209,20,0.352,21,0.4,26,0.013,27,0.017,28,0.013,59,0.907,107,0.672,111,1.499,342,2.289,347,1.833,363,2.844,364,2.441,370,3.225,371,1.558,373,3.225,374,1.446,495,1.558,496,2.627,497,1.996,498,2.638,499,3.444,500,2.311,506,1.558,507,1.828,508,1.828,509,1.828,510,1.558,511,2.138,512,3.302,513,3.302,514,3.302]],["title/classes/Reply.html",[21,0.23,515,2.229]],["body/classes/Reply.html",[3,0.204,4,0.174,5,0.174,7,0.404,10,1.733,11,0.026,12,0.959,15,1.67,16,0.204,20,0.204,21,0.221,26,0.012,27,0.017,28,0.012,59,1.126,107,0.655,109,1.814,110,3.085,111,1.473,114,2.08,115,1.938,116,2.603,117,2.825,118,3.085,120,3.085,122,4.031,126,3.085,128,3.049,131,1.949,141,3.085,142,2.691,145,1.14,155,2.825,345,2.408,362,2.825,377,3.788,515,2.963,516,2.717,517,4.311,518,3.218,519,3.218,520,3.218,521,3.218,522,3.218,523,3.218,524,3.218,525,3.218,526,3.218,527,3.218]],["title/classes/ReplyRepositry.html",[21,0.23,89,2.229]],["body/classes/ReplyRepositry.html",[3,0.308,4,0.263,5,0.263,11,0.026,16,0.368,20,0.308,21,0.334,26,0.019,27,0.022,28,0.019,89,3.871,107,0.992,109,2.37,145,1.725,206,3.443,207,2.943,515,3.241,528,4.113,529,4.87,530,4.87]],["title/classes/SignupDto.html",[21,0.23,506,1.58]],["body/classes/SignupDto.html",[3,0.183,4,0.156,5,0.156,7,0.362,10,1.64,11,0.026,12,0.908,15,1.726,16,0.183,20,0.332,21,0.381,26,0.011,27,0.016,28,0.011,59,1.066,107,0.588,111,1.365,342,2.193,347,1.023,363,2.725,364,2.869,370,3.18,371,1.362,373,3.18,374,1.264,495,1.362,496,2.92,497,1.744,498,2.832,499,3.696,500,2.677,506,1.946,507,2.664,508,2.664,509,2.664,510,1.362,511,1.362,531,2.887,532,2.887,533,2.887,534,2.887,535,2.887,536,2.887,537,2.887,538,2.887]],["title/controllers/UserController.html",[0,1.708,50,2.025]],["body/controllers/UserController.html",[0,1.554,2,1.841,3,0.193,4,0.165,5,0.165,7,0.382,8,1.627,10,1.451,11,0.026,12,0.803,14,2.043,16,0.314,17,0.88,20,0.193,21,0.209,22,1.841,24,2.743,26,0.012,27,0.016,28,0.012,45,1.554,50,2.59,57,2.538,58,2.538,59,0.943,60,2.538,114,1.746,157,2.573,158,3.058,160,3.18,165,3.913,170,2.744,175,2.261,179,2.573,180,2.573,181,2.573,186,4.543,189,2.743,192,2.573,332,2.028,495,2.674,496,2.674,506,2.909,510,2.538,511,2.849,539,2.573,540,3.619,541,3.619,542,3.619,543,2.573,544,3.047,545,3.047,546,3.047,547,3.047,548,2.573,549,3.047,550,3.047,551,3.047,552,3.047,553,3.047,554,2.573,555,2.573,556,3.047,557,3.047,558,3.047,559,3.047,560,3.047,561,3.047,562,3.047,563,3.047,564,3.047,565,3.047,566,3.047,567,3.047,568,3.047,569,3.047,570,3.047]],["title/classes/UserExistDto.html",[21,0.23,510,1.58]],["body/classes/UserExistDto.html",[3,0.203,4,0.173,5,0.173,7,0.403,10,1.484,11,0.026,12,0.822,15,1.729,16,0.203,20,0.348,21,0.396,26,0.012,27,0.017,28,0.012,59,0.964,107,0.653,111,1.47,342,2.269,347,1.137,363,2.82,364,2.596,370,3.216,371,1.514,373,3.216,374,1.405,495,1.514,496,2.726,497,1.94,498,2.946,499,3.845,500,2.266,506,1.514,507,1.776,508,1.776,509,1.776,510,2.097,511,1.514,571,3.21,572,3.21,573,3.21,574,3.21]],["title/modules/UserModule.html",[29,1.467,42,2.025]],["body/modules/UserModule.html",[3,0.301,4,0.257,5,0.257,11,0.026,16,0.404,17,1.374,20,0.301,21,0.326,26,0.018,27,0.022,28,0.018,29,2.513,31,2.427,42,3.468,44,1.807,45,2.427,50,2.876,71,2.427,496,2.245,555,4.019,575,4.76,576,4.76]],["title/classes/UserRepositry.html",[21,0.23,81,1.58]],["body/classes/UserRepositry.html",[3,0.308,4,0.263,5,0.263,11,0.026,16,0.368,20,0.308,21,0.334,26,0.019,27,0.022,28,0.019,81,2.744,107,0.992,109,2.37,145,1.725,148,2.483,206,3.443,207,2.943,577,4.113,578,4.87,579,4.87]],["title/injectables/UserService.html",[45,1.708,100,1.035]],["body/injectables/UserService.html",[3,0.092,4,0.079,5,0.079,7,0.183,8,0.923,11,0.027,12,0.603,14,1.381,15,0.612,16,0.318,17,0.422,20,0.092,21,0.1,22,0.883,24,1.855,26,0.006,27,0.009,28,0.006,44,1.655,45,1.24,57,1.905,58,1.905,59,0.708,60,1.905,71,0.745,77,0.745,81,2.18,82,0.883,83,1.716,84,0.883,100,0.752,101,0.745,116,0.745,131,1.367,148,1.24,158,2.565,160,1.804,165,3.22,170,0.809,175,1.804,189,2.99,213,0.973,214,1.085,215,2.077,223,3.036,224,0.883,225,0.883,228,1.085,229,2.636,230,1.085,233,0.973,234,1.618,235,0.973,238,3.544,240,3.208,243,2.053,245,2.421,247,3.539,254,2.901,255,1.234,257,1.804,258,1.085,259,1.234,261,3.411,262,1.234,263,3.411,288,1.085,290,1.234,332,3.343,333,2.316,334,2.793,342,1.967,345,2.37,346,2.316,347,1.106,397,1.887,400,1.804,471,2.053,495,1.905,496,2.057,498,1.24,500,2.223,506,1.905,510,1.905,511,2.18,540,2.636,541,2.636,542,2.053,543,2.053,548,2.053,554,1.234,580,1.234,581,1.462,582,1.462,583,1.462,584,1.462,585,2.432,586,1.462,587,1.462,588,1.462,589,1.462,590,2.316,591,1.462,592,1.462,593,2.432,594,1.462,595,2.432,596,2.432,597,1.462,598,1.462,599,1.462,600,1.462,601,3.122,602,4.36,603,1.462,604,1.462,605,1.462,606,1.462,607,1.462,608,1.462,609,1.462,610,1.462,611,1.462,612,1.462,613,1.462,614,1.462,615,1.462,616,1.462,617,1.462,618,1.462,619,1.462,620,1.462,621,1.462,622,1.462,623,1.462,624,1.462,625,1.462,626,1.462,627,1.462,628,1.462,629,1.462,630,1.462,631,2.432,632,2.432,633,2.432,634,2.432,635,1.462,636,2.432,637,2.432,638,2.432,639,3.122,640,1.462,641,4.039,642,2.432,643,1.462,644,3.122,645,1.462,646,1.462,647,1.462,648,1.462,649,1.462,650,1.462,651,1.462,652,2.432,653,1.462,654,1.462,655,1.462,656,1.462,657,3.122,658,1.462,659,3.639,660,1.462,661,1.462,662,1.462,663,1.462,664,1.462,665,1.462,666,1.462,667,1.462,668,2.432,669,1.462,670,2.432,671,1.462,672,1.462,673,1.462,674,3.122,675,1.462,676,1.462,677,1.462,678,1.462,679,1.462,680,1.085]],["title/classes/Users.html",[21,0.23,148,1.708]],["body/classes/Users.html",[3,0.125,4,0.107,5,0.107,7,0.249,10,1.755,11,0.027,12,0.972,15,1.694,16,0.197,20,0.125,21,0.136,26,0.008,27,0.012,28,0.008,59,1.14,107,0.404,109,1.268,110,2.321,111,1.03,115,1.458,116,1.958,117,2.126,120,2.321,122,3.963,126,2.321,128,3.431,132,3.228,134,3.613,135,3.228,138,1.32,139,1.199,141,2.321,142,1.881,144,1.32,145,0.703,148,1.587,155,2.126,245,4.191,247,2.895,334,2.321,345,1.812,401,2.85,498,1.958,500,1.958,507,2.126,508,2.126,509,2.126,590,2.85,680,2.85,681,1.675,682,3.244,683,3.244,684,3.244,685,3.244,686,3.244,687,3.244,688,3.244,689,3.244,690,3.244,691,3.244,692,5.584,693,1.984,694,1.984,695,1.984,696,1.984,697,1.984,698,1.984,699,1.984,700,1.984,701,1.984,702,1.984,703,1.984,704,1.984,705,1.984,706,1.984,707,1.984,708,1.984,709,1.984,710,1.984,711,1.984,712,1.984,713,1.984,714,1.984,715,1.984,716,1.984,717,1.984,718,5.584,719,4.351]],["title/coverage.html",[720,3.396]],["body/coverage.html",[0,2.296,1,1.71,5,0.139,6,2.17,11,0.027,18,1.422,21,0.452,26,0.01,27,0.015,28,0.01,35,1.71,43,1.31,44,0.975,45,1.31,50,1.553,51,1.553,59,0.45,72,1.553,73,1.553,78,1.906,81,1.212,83,1.212,85,1.553,87,1.553,89,1.71,100,1.715,102,2.17,106,1.31,108,2.17,146,1.422,148,1.31,154,5.127,156,2.17,162,1.212,167,1.212,172,1.212,176,1.212,205,2.17,210,2.17,240,1.422,322,2.812,323,2.812,331,1.906,355,1.906,356,2.17,361,3.005,376,2.17,389,2.17,397,1.553,398,2.17,410,2.17,421,3.934,435,1.906,443,1.906,449,1.906,495,1.212,496,2.617,497,3.005,506,1.212,510,1.212,511,1.212,515,1.71,516,2.17,528,2.17,539,2.17,577,2.17,580,2.17,681,2.17,720,1.906,721,2.569,722,2.569,723,2.569,724,4.972,725,5.303,726,5.303,727,2.569,728,2.569,729,4.504,730,2.569,731,3.201,732,3.201,733,6.202,734,2.17,735,6.528,736,2.17,737,2.17,738,2.569,739,2.17,740,2.17,741,2.17,742,2.17,743,2.569,744,2.17,745,2.17,746,2.569,747,2.17,748,2.17,749,2.17,750,2.569,751,2.569]],["title/dependencies.html",[32,2.682,752,2.795]],["body/dependencies.html",[11,0.027,17,1.296,21,0.379,26,0.017,27,0.021,28,0.017,32,2.987,77,2.289,139,2.713,145,1.59,374,1.965,753,6.004,754,4.489,755,4.489,756,4.489,757,5.537,758,4.489,759,4.489,760,4.489,761,4.489,762,4.489,763,4.489,764,4.489,765,4.489,766,3.791,767,4.489,768,4.489,769,4.489,770,4.489,771,4.489,772,4.489,773,4.489,774,4.489,775,4.489]],["title/miscellaneous/functions.html",[776,1.86,777,3.404]],["body/miscellaneous/functions.html",[7,0.656,11,0.023,26,0.02,27,0.023,28,0.02,35,4.266,749,4.42,776,3.483,777,4.42,778,5.234]],["title/index.html",[7,0.351,779,2.795,780,2.795]],["body/index.html",[4,0.218,11,0.026,26,0.015,27,0.02,28,0.015,206,2.237,257,3,267,3.414,720,3,781,4.043,782,4.043,783,5.184,784,4.043,785,4.043,786,4.043,787,4.043,788,4.043,789,4.043,790,4.043,791,5.184,792,4.043,793,4.043,794,4.043,795,6.494,796,4.043,797,4.043,798,4.043,799,6.386,800,4.043,801,4.043,802,5.184,803,4.043,804,4.043,805,4.043,806,4.043,807,5.184,808,5.184,809,4.043,810,4.043,811,4.043,812,4.043,813,4.043,814,4.043,815,4.043,816,4.043,817,4.043,818,4.043,819,3.414,820,4.043,821,4.043,822,4.043,823,4.043,824,4.043,825,4.043]],["title/modules.html",[31,2.334]],["body/modules.html",[11,0.023,26,0.019,27,0.023,28,0.019,30,3.344,31,2.562,41,3.037,42,3.037,353,3.729,819,4.244,826,5.025,827,5.025,828,6.511,829,6.304,830,6.304]],["title/overview.html",[831,3.865]],["body/overview.html",[2,2.593,11,0.025,18,3.256,26,0.016,27,0.021,28,0.016,29,1.879,30,4.583,31,2.187,32,2.855,33,3.623,34,3.623,35,2.855,36,3.623,37,3.623,38,3.623,39,3.623,40,3.623,41,3.555,42,3.555,43,2.999,44,2.233,45,2.999,46,4.546,47,3.623,48,3.623,101,2.187,107,0.873,831,3.623,832,4.291,833,4.291,834,4.291,835,4.291]],["title/miscellaneous/variables.html",[776,1.86,836,3.404]],["body/miscellaneous/variables.html",[7,0.317,11,0.026,15,1.747,26,0.01,27,0.014,28,0.01,59,0.864,78,2.779,112,1.682,113,1.876,114,1.817,115,2,116,2.685,117,2.915,118,2.696,119,1.289,128,3.557,131,1.953,134,4.112,155,2.915,240,2.915,245,1.682,334,1.528,345,2.105,362,2.073,377,2.779,399,2.135,400,1.876,401,2.779,421,1.876,434,2.135,435,2.779,436,2.135,443,2.779,444,2.135,445,2.135,446,2.135,447,2.135,448,2.135,449,2.779,451,2.135,498,1.289,500,1.91,507,2.073,508,1.399,509,1.399,517,2.135,590,1.876,680,1.876,682,2.135,683,2.135,684,2.135,685,2.135,686,2.135,687,2.135,688,2.135,689,2.135,690,2.135,691,2.135,731,2.135,732,2.135,734,4.821,736,2.135,737,3.163,739,2.135,740,3.163,741,2.135,742,3.163,744,2.135,745,3.163,747,2.135,748,3.163,766,2.135,776,1.682,836,2.135,837,3.745,838,2.528,839,2.528,840,4.933,841,2.528,842,2.528,843,2.528,844,6.18,845,2.528,846,2.528,847,2.528,848,2.528,849,2.528,850,2.528,851,2.528,852,2.528,853,2.528,854,2.528,855,2.528,856,2.528,857,2.528,858,2.528,859,2.528,860,2.528,861,2.528,862,2.528,863,2.528,864,5.267,865,2.528,866,2.528]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"classes/ArticlesRepositry.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthUserMiddleware.html":{},"classes/CommentDto.html":{},"classes/Comments.html":{},"classes/CommentsRepositry.html":{},"classes/CreateDto.html":{},"classes/Devices.html":{},"classes/DevicesRepositry.html":{},"classes/FindDto.html":{},"injectables/HelperService.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/Reply.html":{},"classes/ReplyRepositry.html":{},"classes/SignupDto.html":{},"controllers/UserController.html":{},"classes/UserExistDto.html":{},"modules/UserModule.html":{},"classes/UserRepositry.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":154,"title":{},"body":{"classes/Articles.html":{},"classes/Comments.html":{},"coverage.html":{}}}],["0.1.13",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["0.2.31",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":735,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":743,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":304,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["1.rds.amazonaws.com",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10",{"_index":283,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["16",{"_index":455,"title":{},"body":{"injectables/HelperService.html":{}}}],["19",{"_index":835,"title":{},"body":{"overview.html":{}}}],["2.18.1",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["24d335b8761e",{"_index":448,"title":{},"body":{"injectables/HelperService.html":{},"miscellaneous/variables.html":{}}}],["256",{"_index":467,"title":{},"body":{"injectables/HelperService.html":{}}}],["3",{"_index":833,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["32",{"_index":463,"title":{},"body":{"injectables/HelperService.html":{}}}],["3306",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["36d851f4",{"_index":444,"title":{},"body":{"injectables/HelperService.html":{},"miscellaneous/variables.html":{}}}],["3e68",{"_index":445,"title":{},"body":{"injectables/HelperService.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":832,"title":{},"body":{"overview.html":{}}}],["4919",{"_index":446,"title":{},"body":{"injectables/HelperService.html":{},"miscellaneous/variables.html":{}}}],["5.11.16",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":834,"title":{},"body":{"overview.html":{}}}],["6.6.3",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["7.2.3",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["7.6.12",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["9e313bae8ffb4bcfaffb3f6a8a5592c1",{"_index":451,"title":{},"body":{"injectables/HelperService.html":{},"miscellaneous/variables.html":{}}}],["__dirname+'/../schemas",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["__entitypath",{"_index":734,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["access",{"_index":339,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{}}}],["account",{"_index":598,"title":{},"body":{"injectables/UserService.html":{}}}],["activedevice",{"_index":659,"title":{},"body":{"injectables/UserService.html":{}}}],["address",{"_index":682,"title":{},"body":{"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["aes",{"_index":481,"title":{},"body":{"injectables/HelperService.html":{}}}],["again",{"_index":259,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/UserService.html":{}}}],["aleary",{"_index":661,"title":{},"body":{"injectables/UserService.html":{}}}],["all(@body",{"_index":187,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["all(finddto",{"_index":161,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["already",{"_index":666,"title":{},"body":{"injectables/UserService.html":{}}}],["alredy",{"_index":597,"title":{},"body":{"injectables/UserService.html":{}}}],["amazing",{"_index":820,"title":{},"body":{"index.html":{}}}],["app",{"_index":797,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appcontroller,usercontroller",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["applications",{"_index":789,"title":{},"body":{"index.html":{}}}],["apply",{"_index":306,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["apply(authusermiddleware",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["apply(authusermiddleware,authauthermiddleware",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arcid",{"_index":375,"title":{},"body":{"classes/CommentDto.html":{},"classes/CreateDto.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{}}}],["ariticlesschema",{"_index":737,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["article",{"_index":252,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["article.likes",{"_index":303,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articlecount",{"_index":295,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articlecount[0",{"_index":297,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articlecount[0].total",{"_index":298,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articledata",{"_index":239,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articledata.articleid",{"_index":241,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articledata.autherid",{"_index":242,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articledata.body",{"_index":250,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articledata.isactive",{"_index":244,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articledata.isdeleted",{"_index":246,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articledata.title",{"_index":248,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articleid",{"_index":112,"title":{},"body":{"classes/Articles.html":{},"injectables/ArticlesService.html":{},"classes/Comments.html":{},"miscellaneous/variables.html":{}}}],["articles",{"_index":106,"title":{"classes/Articles.html":{}},"body":{"classes/Articles.html":{},"controllers/ArticlesController.html":{},"classes/ArticlesRepositry.html":{},"injectables/ArticlesService.html":{},"classes/Comments.html":{},"coverage.html":{}}}],["articles.articleid",{"_index":274,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articles.controller",{"_index":204,"title":{},"body":{"modules/ArticlesModule.html":{}}}],["articles.createat",{"_index":294,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articles.createdat",{"_index":280,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articles.entity",{"_index":208,"title":{},"body":{"classes/ArticlesRepositry.html":{}}}],["articles.service",{"_index":182,"title":{},"body":{"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{}}}],["articles/articles.entity",{"_index":388,"title":{},"body":{"classes/Comments.html":{}}}],["articles/articles.entity.js",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["articles/like\",\"articles/comment",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["articlescontroller",{"_index":51,"title":{"controllers/ArticlesController.html":{}},"body":{"modules/AppModule.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"coverage.html":{}}}],["articlesmodule",{"_index":41,"title":{"modules/ArticlesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules.html":{},"overview.html":{}}}],["articlesrepositry",{"_index":85,"title":{"classes/ArticlesRepositry.html":{}},"body":{"modules/AppModule.html":{},"classes/ArticlesRepositry.html":{},"injectables/ArticlesService.html":{},"coverage.html":{}}}],["articlesservice",{"_index":43,"title":{"injectables/ArticlesService.html":{}},"body":{"modules/AppModule.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"coverage.html":{},"overview.html":{}}}],["articlesservice:articlesservice",{"_index":185,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["articleupdated",{"_index":301,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["articleupdated.affected",{"_index":305,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["artid",{"_index":362,"title":{},"body":{"classes/CommentDto.html":{},"classes/CreateDto.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{},"classes/Reply.html":{},"miscellaneous/variables.html":{}}}],["asc",{"_index":281,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["async",{"_index":158,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthService.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/HelperService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["authauthermiddleware",{"_index":72,"title":{"classes/AuthAutherMiddleware.html":{}},"body":{"modules/AppModule.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"coverage.html":{}}}],["auther",{"_index":352,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"classes/CommentDto.html":{},"classes/CreateDto.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{}}}],["autherid",{"_index":113,"title":{},"body":{"classes/Articles.html":{},"injectables/ArticlesService.html":{},"miscellaneous/variables.html":{}}}],["authmodule",{"_index":353,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{}}}],["authority",{"_index":338,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{}}}],["authservice",{"_index":355,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["authusermiddleware",{"_index":73,"title":{"injectables/AuthUserMiddleware.html":{}},"body":{"modules/AppModule.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"coverage.html":{}}}],["available",{"_index":830,"title":{},"body":{"modules.html":{}}}],["await",{"_index":189,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/HelperService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["b6f9",{"_index":447,"title":{},"body":{"injectables/HelperService.html":{},"miscellaneous/variables.html":{}}}],["b8hhress572gjlgd",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backers",{"_index":821,"title":{},"body":{"index.html":{}}}],["base64",{"_index":479,"title":{},"body":{"injectables/HelperService.html":{}}}],["baseentity",{"_index":110,"title":{},"body":{"classes/Articles.html":{},"classes/Comments.html":{},"classes/Devices.html":{},"classes/Reply.html":{},"classes/Users.html":{}}}],["body",{"_index":114,"title":{},"body":{"classes/Articles.html":{},"controllers/ArticlesController.html":{},"classes/CommentDto.html":{},"classes/Comments.html":{},"classes/CreateDto.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{},"classes/Reply.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":128,"title":{},"body":{"classes/Articles.html":{},"classes/Comments.html":{},"classes/Devices.html":{},"classes/Reply.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":828,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":826,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":464,"title":{},"body":{"injectables/HelperService.html":{}}}],["buffer.concat",{"_index":474,"title":{},"body":{"injectables/HelperService.html":{}}}],["buffer.from(data.token",{"_index":478,"title":{},"body":{"injectables/HelperService.html":{}}}],["buffer.from(iv",{"_index":469,"title":{},"body":{"injectables/HelperService.html":{}}}],["building",{"_index":784,"title":{},"body":{"index.html":{}}}],["catch",{"_index":287,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/HelperService.html":{}}}],["check",{"_index":652,"title":{},"body":{"injectables/UserService.html":{}}}],["cipher",{"_index":465,"title":{},"body":{"injectables/HelperService.html":{}}}],["cipher.final",{"_index":476,"title":{},"body":{"injectables/HelperService.html":{}}}],["cipher.update(input",{"_index":475,"title":{},"body":{"injectables/HelperService.html":{}}}],["class",{"_index":21,"title":{"classes/Articles.html":{},"classes/ArticlesRepositry.html":{},"classes/AuthAutherMiddleware.html":{},"classes/CommentDto.html":{},"classes/Comments.html":{},"classes/CommentsRepositry.html":{},"classes/CreateDto.html":{},"classes/Devices.html":{},"classes/DevicesRepositry.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/Reply.html":{},"classes/ReplyRepositry.html":{},"classes/SignupDto.html":{},"classes/UserExistDto.html":{},"classes/UserRepositry.html":{},"classes/Users.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"classes/ArticlesRepositry.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthUserMiddleware.html":{},"classes/CommentDto.html":{},"classes/Comments.html":{},"classes/CommentsRepositry.html":{},"classes/CreateDto.html":{},"classes/Devices.html":{},"classes/DevicesRepositry.html":{},"classes/FindDto.html":{},"injectables/HelperService.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/Reply.html":{},"classes/ReplyRepositry.html":{},"classes/SignupDto.html":{},"controllers/UserController.html":{},"classes/UserExistDto.html":{},"modules/UserModule.html":{},"classes/UserRepositry.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":107,"title":{},"body":{"classes/Articles.html":{},"classes/ArticlesRepositry.html":{},"classes/AuthAutherMiddleware.html":{},"classes/CommentDto.html":{},"classes/Comments.html":{},"classes/CommentsRepositry.html":{},"classes/CreateDto.html":{},"classes/Devices.html":{},"classes/DevicesRepositry.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/Reply.html":{},"classes/ReplyRepositry.html":{},"classes/SignupDto.html":{},"classes/UserExistDto.html":{},"classes/UserRepositry.html":{},"classes/Users.html":{},"overview.html":{}}}],["clearuser",{"_index":422,"title":{},"body":{"injectables/HelperService.html":{}}}],["clearuser(data",{"_index":426,"title":{},"body":{"injectables/HelperService.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["column",{"_index":122,"title":{},"body":{"classes/Articles.html":{},"classes/Comments.html":{},"classes/Devices.html":{},"classes/Reply.html":{},"classes/Users.html":{}}}],["column(\"text",{"_index":152,"title":{},"body":{"classes/Articles.html":{},"classes/Comments.html":{}}}],["column('text",{"_index":124,"title":{},"body":{"classes/Articles.html":{},"classes/Comments.html":{}}}],["column({nullable",{"_index":692,"title":{},"body":{"classes/Users.html":{}}}],["column({type",{"_index":132,"title":{},"body":{"classes/Articles.html":{},"classes/Comments.html":{},"classes/Users.html":{}}}],["column({type:'boolean",{"_index":719,"title":{},"body":{"classes/Users.html":{}}}],["column({type:'int",{"_index":153,"title":{},"body":{"classes/Articles.html":{},"classes/Comments.html":{}}}],["comment",{"_index":159,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["comment(@req",{"_index":200,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["comment(req",{"_index":166,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["comment,sorry",{"_index":321,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["commentcount",{"_index":272,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["commentcount.articleid",{"_index":273,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["commentdata",{"_index":310,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["commentdata.articleid",{"_index":312,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["commentdata.body",{"_index":314,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["commentdata.commentid",{"_index":311,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["commentdata.isactive",{"_index":316,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["commentdata.isdeleted",{"_index":317,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["commentdata.userid",{"_index":318,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["commentdto",{"_index":167,"title":{"classes/CommentDto.html":{}},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/CommentDto.html":{},"classes/CreateDto.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{},"coverage.html":{}}}],["commentdto):promise",{"_index":201,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["commentdto.artid",{"_index":313,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["commentdto.body",{"_index":315,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["commentid",{"_index":377,"title":{},"body":{"classes/Comments.html":{},"classes/Reply.html":{},"miscellaneous/variables.html":{}}}],["comments",{"_index":146,"title":{"classes/Comments.html":{}},"body":{"classes/Articles.html":{},"injectables/ArticlesService.html":{},"classes/Comments.html":{},"classes/CommentsRepositry.html":{},"coverage.html":{}}}],["comments.articleid",{"_index":268,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["comments.entity",{"_index":390,"title":{},"body":{"classes/CommentsRepositry.html":{}}}],["comments/comments.entity",{"_index":147,"title":{},"body":{"classes/Articles.html":{}}}],["comments/comments.entity.js",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commentscount",{"_index":270,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["commentsrepositry",{"_index":87,"title":{"classes/CommentsRepositry.html":{}},"body":{"modules/AppModule.html":{},"injectables/ArticlesService.html":{},"classes/CommentsRepositry.html":{},"coverage.html":{}}}],["commentsschema",{"_index":740,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["commentvalue",{"_index":319,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["component/articles/articles.controller",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["component/articles/articles.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["component/articles/articles.service",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["component/user",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["config/auth/auth",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["config/database",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["config/helper/helper.service",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["config/schemas/articles/articles.entity",{"_index":231,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["config/schemas/articles/articles.repositry",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"injectables/ArticlesService.html":{}}}],["config/schemas/comments/comments.entity",{"_index":232,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["config/schemas/comments/comments.repositry",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"injectables/ArticlesService.html":{}}}],["config/schemas/devices/devices.entity",{"_index":587,"title":{},"body":{"injectables/UserService.html":{}}}],["config/schemas/devices/devices.repositry",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/UserService.html":{}}}],["config/schemas/reply/reply.repositry",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["config/schemas/user/user.entity",{"_index":588,"title":{},"body":{"injectables/UserService.html":{}}}],["config/schemas/user/user.repositry",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/UserService.html":{}}}],["config/typeorm.config",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["config/typeorm.config.ts",{"_index":732,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configure",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(commentdto.body",{"_index":309,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["const",{"_index":238,"title":{},"body":{"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/HelperService.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":213,"title":{},"body":{"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/UserService.html":{}}}],["constructor(helperservice",{"_index":214,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["consumer",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/ArticlesController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ArticlesController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('articles",{"_index":184,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["controller('user",{"_index":556,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticlesController.html":{},"controllers/UserController.html":{},"overview.html":{}}}],["count",{"_index":269,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["country",{"_index":508,"title":{},"body":{"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/SignupDto.html":{},"classes/UserExistDto.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["countrycode",{"_index":498,"title":{},"body":{"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/SignupDto.html":{},"classes/UserExistDto.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":720,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":255,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/UserService.html":{}}}],["createart",{"_index":211,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["createart(req",{"_index":218,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["createcipheriv",{"_index":437,"title":{},"body":{"injectables/HelperService.html":{}}}],["createcipheriv('aes",{"_index":466,"title":{},"body":{"injectables/HelperService.html":{}}}],["createdat",{"_index":115,"title":{},"body":{"classes/Articles.html":{},"injectables/ArticlesService.html":{},"classes/CommentDto.html":{},"classes/Comments.html":{},"classes/CreateDto.html":{},"classes/Devices.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{},"classes/Reply.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["createdatecolumn",{"_index":126,"title":{},"body":{"classes/Articles.html":{},"classes/Comments.html":{},"classes/Devices.html":{},"classes/Reply.html":{},"classes/Users.html":{}}}],["createdecipheriv",{"_index":438,"title":{},"body":{"injectables/HelperService.html":{}}}],["createdto",{"_index":176,"title":{"classes/CreateDto.html":{}},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/CommentDto.html":{},"classes/CreateDto.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{},"coverage.html":{}}}],["createdto):promise",{"_index":193,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["createdto.body",{"_index":251,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["createdto.title",{"_index":249,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["createquerybuilder",{"_index":227,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["criptodata",{"_index":423,"title":{},"body":{"injectables/HelperService.html":{}}}],["criptodata(data",{"_index":428,"title":{},"body":{"injectables/HelperService.html":{}}}],["crypto",{"_index":435,"title":{},"body":{"injectables/HelperService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["crypto.createhash('sha256",{"_index":457,"title":{},"body":{"injectables/HelperService.html":{}}}],["crypto.scryptsync(key",{"_index":453,"title":{},"body":{"injectables/HelperService.html":{}}}],["ctr",{"_index":468,"title":{},"body":{"injectables/HelperService.html":{}}}],["data",{"_index":344,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/HelperService.html":{}}}],["data.userid",{"_index":462,"title":{},"body":{"injectables/HelperService.html":{}}}],["data[keys[i",{"_index":490,"title":{},"body":{"injectables/HelperService.html":{}}}],["database",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":602,"title":{},"body":{"injectables/UserService.html":{}}}],["decipher",{"_index":480,"title":{},"body":{"injectables/HelperService.html":{}}}],["decipher.final",{"_index":484,"title":{},"body":{"injectables/HelperService.html":{}}}],["decipher.update(buffer.from(token",{"_index":483,"title":{},"body":{"injectables/HelperService.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/Articles.html":{},"controllers/ArticlesController.html":{},"classes/CommentDto.html":{},"classes/Comments.html":{},"classes/CreateDto.html":{},"classes/Devices.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/Reply.html":{},"classes/SignupDto.html":{},"controllers/UserController.html":{},"classes/UserExistDto.html":{},"classes/Users.html":{}}}],["decrept",{"_index":424,"title":{},"body":{"injectables/HelperService.html":{}}}],["decrept(data",{"_index":430,"title":{},"body":{"injectables/HelperService.html":{}}}],["decrpyted",{"_index":482,"title":{},"body":{"injectables/HelperService.html":{}}}],["default",{"_index":134,"title":{},"body":{"classes/Articles.html":{},"classes/Comments.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthService.html":{},"injectables/AuthUserMiddleware.html":{},"classes/CommentDto.html":{},"classes/Comments.html":{},"classes/CreateDto.html":{},"classes/Devices.html":{},"classes/FindDto.html":{},"injectables/HelperService.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/Reply.html":{},"classes/SignupDto.html":{},"controllers/UserController.html":{},"classes/UserExistDto.html":{},"injectables/UserService.html":{},"classes/Users.html":{}}}],["delete",{"_index":489,"title":{},"body":{"injectables/HelperService.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":790,"title":{},"body":{"index.html":{}}}],["detail",{"_index":399,"title":{},"body":{"classes/Devices.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":798,"title":{},"body":{"index.html":{}}}],["device",{"_index":644,"title":{},"body":{"injectables/UserService.html":{}}}],["devicedata",{"_index":631,"title":{},"body":{"injectables/UserService.html":{}}}],["devicedata.detail",{"_index":634,"title":{},"body":{"injectables/UserService.html":{}}}],["devicedata.deviceid",{"_index":632,"title":{},"body":{"injectables/UserService.html":{}}}],["devicedata.isactive",{"_index":636,"title":{},"body":{"injectables/UserService.html":{}}}],["devicedata.isblocked",{"_index":638,"title":{},"body":{"injectables/UserService.html":{}}}],["devicedata.isdeleted",{"_index":637,"title":{},"body":{"injectables/UserService.html":{}}}],["devicedata.userid",{"_index":633,"title":{},"body":{"injectables/UserService.html":{}}}],["deviceid",{"_index":400,"title":{},"body":{"classes/Devices.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["devicerepositry",{"_index":215,"title":{},"body":{"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/UserService.html":{}}}],["deviceres",{"_index":641,"title":{},"body":{"injectables/UserService.html":{}}}],["deviceres.deviceid",{"_index":676,"title":{},"body":{"injectables/UserService.html":{}}}],["deviceres.isactive",{"_index":660,"title":{},"body":{"injectables/UserService.html":{}}}],["devices",{"_index":397,"title":{"classes/Devices.html":{}},"body":{"classes/Devices.html":{},"classes/DevicesRepositry.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["devices.entity",{"_index":411,"title":{},"body":{"classes/DevicesRepositry.html":{}}}],["devices/devices.entity.js",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deviceschema",{"_index":742,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["devicesrepositry",{"_index":83,"title":{"classes/DevicesRepositry.html":{}},"body":{"modules/AppModule.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"classes/DevicesRepositry.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["devicetoken",{"_index":599,"title":{},"body":{"injectables/UserService.html":{}}}],["deviceupdates",{"_index":674,"title":{},"body":{"injectables/UserService.html":{}}}],["documentation",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["don't",{"_index":337,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{}}}],["dto/articles.dto",{"_index":183,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["dto/user.dto",{"_index":554,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":809,"title":{},"body":{"index.html":{}}}],["east",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["efficient",{"_index":785,"title":{},"body":{"index.html":{}}}],["email",{"_index":683,"title":{},"body":{"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["emailvirefy",{"_index":684,"title":{},"body":{"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["encryptedtext",{"_index":473,"title":{},"body":{"injectables/HelperService.html":{}}}],["encryptedtext.tostring(\"base64",{"_index":477,"title":{},"body":{"injectables/HelperService.html":{}}}],["enter",{"_index":662,"title":{},"body":{"injectables/UserService.html":{}}}],["entities",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":142,"title":{},"body":{"classes/Articles.html":{},"classes/Comments.html":{},"classes/Devices.html":{},"classes/Reply.html":{},"classes/Users.html":{}}}],["entityrepository",{"_index":207,"title":{},"body":{"classes/ArticlesRepositry.html":{},"classes/CommentsRepositry.html":{},"classes/DevicesRepositry.html":{},"classes/ReplyRepositry.html":{},"classes/UserRepositry.html":{}}}],["entityrepository(articles",{"_index":209,"title":{},"body":{"classes/ArticlesRepositry.html":{}}}],["entityrepository(comments",{"_index":391,"title":{},"body":{"classes/CommentsRepositry.html":{}}}],["entityrepository(devices",{"_index":412,"title":{},"body":{"classes/DevicesRepositry.html":{}}}],["entityrepository(reply",{"_index":530,"title":{},"body":{"classes/ReplyRepositry.html":{}}}],["entityrepository(users",{"_index":579,"title":{},"body":{"classes/UserRepositry.html":{}}}],["error",{"_index":288,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/HelperService.html":{},"injectables/UserService.html":{}}}],["exist",{"_index":653,"title":{},"body":{"injectables/UserService.html":{}}}],["exist:!!user",{"_index":592,"title":{},"body":{"injectables/UserService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"classes/ArticlesRepositry.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthUserMiddleware.html":{},"classes/CommentDto.html":{},"classes/Comments.html":{},"classes/CommentsRepositry.html":{},"classes/CreateDto.html":{},"classes/Devices.html":{},"classes/DevicesRepositry.html":{},"classes/FindDto.html":{},"injectables/HelperService.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/Reply.html":{},"classes/ReplyRepositry.html":{},"classes/SignupDto.html":{},"controllers/UserController.html":{},"classes/UserExistDto.html":{},"modules/UserModule.html":{},"classes/UserRepositry.html":{},"injectables/UserService.html":{},"classes/Users.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["express",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":109,"title":{},"body":{"classes/Articles.html":{},"classes/ArticlesRepositry.html":{},"classes/Comments.html":{},"classes/CommentsRepositry.html":{},"classes/Devices.html":{},"classes/DevicesRepositry.html":{},"classes/Reply.html":{},"classes/ReplyRepositry.html":{},"classes/UserRepositry.html":{},"classes/Users.html":{}}}],["f9mgfal6udhmdsoq",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":247,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/HelperService.html":{},"injectables/UserService.html":{},"classes/Users.html":{}}}],["fastify",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"classes/ArticlesRepositry.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthUserMiddleware.html":{},"classes/CommentDto.html":{},"classes/Comments.html":{},"classes/CommentsRepositry.html":{},"classes/CreateDto.html":{},"classes/Devices.html":{},"classes/DevicesRepositry.html":{},"classes/FindDto.html":{},"injectables/HelperService.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/Reply.html":{},"classes/ReplyRepositry.html":{},"classes/SignupDto.html":{},"controllers/UserController.html":{},"classes/UserExistDto.html":{},"modules/UserModule.html":{},"classes/UserRepositry.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"coverage.html":{}}}],["finddto",{"_index":162,"title":{"classes/FindDto.html":{}},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/CommentDto.html":{},"classes/CreateDto.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{},"coverage.html":{}}}],["finddto):promise",{"_index":188,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["finddto.arcid",{"_index":276,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["finddto.auther",{"_index":275,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["finddto.createdat",{"_index":277,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["finddto.pagenum",{"_index":285,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["finddto.title",{"_index":278,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["fingerprint",{"_index":342,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"classes/CommentDto.html":{},"classes/CreateDto.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/SignupDto.html":{},"classes/UserExistDto.html":{},"injectables/UserService.html":{}}}],["first",{"_index":655,"title":{},"body":{"injectables/UserService.html":{}}}],["firstname",{"_index":685,"title":{},"body":{"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["for(let",{"_index":488,"title":{},"body":{"injectables/HelperService.html":{}}}],["forroutes(\"articles/create",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["forroutes(\"user/logout",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["foud",{"_index":654,"title":{},"body":{"injectables/UserService.html":{}}}],["framework",{"_index":783,"title":{},"body":{"index.html":{}}}],["function",{"_index":331,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"coverage.html":{}}}],["functions",{"_index":777,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":686,"title":{},"body":{"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["generatehash",{"_index":425,"title":{},"body":{"injectables/HelperService.html":{}}}],["generatehash(data",{"_index":432,"title":{},"body":{"injectables/HelperService.html":{}}}],["getall",{"_index":212,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["getall(finddto",{"_index":220,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["getconnection",{"_index":226,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["getconnection().query(qery",{"_index":286,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["getconnection().query(qerycount",{"_index":296,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":779,"title":{"index.html":{}},"body":{}}],["graph",{"_index":829,"title":{},"body":{"modules.html":{}}}],["group",{"_index":271,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["grow",{"_index":816,"title":{},"body":{"index.html":{}}}],["hash",{"_index":456,"title":{},"body":{"injectables/HelperService.html":{}}}],["hash.digest('hex",{"_index":460,"title":{},"body":{"injectables/HelperService.html":{}}}],["hash.update(data",{"_index":458,"title":{},"body":{"injectables/HelperService.html":{}}}],["hasheddata",{"_index":459,"title":{},"body":{"injectables/HelperService.html":{}}}],["hashing",{"_index":646,"title":{},"body":{"injectables/UserService.html":{}}}],["hello",{"_index":104,"title":{},"body":{"injectables/AppService.html":{}}}],["helperservice",{"_index":44,"title":{"injectables/HelperService.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/HelperService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["here",{"_index":825,"title":{},"body":{"index.html":{}}}],["hex",{"_index":470,"title":{},"body":{"injectables/HelperService.html":{}}}],["host",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpexception",{"_index":223,"title":{},"body":{"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/HelperService.html":{},"injectables/UserService.html":{}}}],["httpexception(\"success",{"_index":262,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/UserService.html":{}}}],["httpexception(\"you",{"_index":336,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{}}}],["httpexception('somthing",{"_index":672,"title":{},"body":{"injectables/UserService.html":{}}}],["httpstatus",{"_index":224,"title":{},"body":{"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/HelperService.html":{},"injectables/UserService.html":{}}}],["httpstatus.bad_request",{"_index":261,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/UserService.html":{}}}],["httpstatus.ok",{"_index":263,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/UserService.html":{}}}],["httpstatus.unauthorized",{"_index":341,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{}}}],["hwr4wkxs079mtb19.cbetxkdyhwsb.us",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["identifier",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":687,"title":{},"body":{"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":324,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"classes/ArticlesRepositry.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthUserMiddleware.html":{},"classes/CommentDto.html":{},"classes/Comments.html":{},"classes/CommentsRepositry.html":{},"classes/CreateDto.html":{},"classes/Devices.html":{},"classes/DevicesRepositry.html":{},"classes/FindDto.html":{},"injectables/HelperService.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/Reply.html":{},"classes/ReplyRepositry.html":{},"classes/SignupDto.html":{},"controllers/UserController.html":{},"classes/UserExistDto.html":{},"modules/UserModule.html":{},"classes/UserRepositry.html":{},"injectables/UserService.html":{},"classes/Users.html":{}}}],["imports",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthService.html":{},"injectables/AuthUserMiddleware.html":{},"classes/CommentDto.html":{},"classes/Comments.html":{},"classes/CreateDto.html":{},"classes/Devices.html":{},"classes/FindDto.html":{},"injectables/HelperService.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/Reply.html":{},"classes/SignupDto.html":{},"controllers/UserController.html":{},"classes/UserExistDto.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"classes/ArticlesRepositry.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthUserMiddleware.html":{},"classes/CommentDto.html":{},"classes/Comments.html":{},"classes/CommentsRepositry.html":{},"classes/CreateDto.html":{},"classes/Devices.html":{},"classes/DevicesRepositry.html":{},"classes/FindDto.html":{},"injectables/HelperService.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/Reply.html":{},"classes/ReplyRepositry.html":{},"classes/SignupDto.html":{},"controllers/UserController.html":{},"classes/UserExistDto.html":{},"modules/UserModule.html":{},"classes/UserRepositry.html":{},"injectables/UserService.html":{},"classes/Users.html":{}}}],["information",{"_index":648,"title":{},"body":{"injectables/UserService.html":{}}}],["injectable",{"_index":100,"title":{"injectables/AppService.html":{},"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/HelperService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthService.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/HelperService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":101,"title":{},"body":{"injectables/AppService.html":{},"injectables/ArticlesService.html":{},"injectables/AuthService.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/HelperService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":225,"title":{},"body":{"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/HelperService.html":{},"injectables/UserService.html":{}}}],["injectrepository(articlesrepositry",{"_index":236,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["injectrepository(commentsrepositry",{"_index":237,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["injectrepository(devicesrepositry",{"_index":233,"title":{},"body":{"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/UserService.html":{}}}],["injectrepository(userrepositry",{"_index":235,"title":{},"body":{"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/UserService.html":{}}}],["input",{"_index":471,"title":{},"body":{"injectables/HelperService.html":{},"injectables/UserService.html":{}}}],["installation",{"_index":794,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":796,"title":{},"body":{"index.html":{}}}],["int",{"_index":133,"title":{},"body":{"classes/Articles.html":{},"classes/Comments.html":{}}}],["isactive",{"_index":116,"title":{},"body":{"classes/Articles.html":{},"classes/Comments.html":{},"classes/Devices.html":{},"classes/Reply.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["isblocked",{"_index":401,"title":{},"body":{"classes/Devices.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["isdeleted",{"_index":117,"title":{},"body":{"classes/Articles.html":{},"classes/Comments.html":{},"classes/Devices.html":{},"classes/Reply.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["islogin",{"_index":680,"title":{},"body":{"injectables/UserService.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["isnotempty",{"_index":370,"title":{},"body":{"classes/CommentDto.html":{},"classes/CreateDto.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/SignupDto.html":{},"classes/UserExistDto.html":{}}}],["isnotempty()@isstring",{"_index":364,"title":{},"body":{"classes/CommentDto.html":{},"classes/CreateDto.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/SignupDto.html":{},"classes/UserExistDto.html":{}}}],["isnumber",{"_index":371,"title":{},"body":{"classes/CommentDto.html":{},"classes/CreateDto.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/SignupDto.html":{},"classes/UserExistDto.html":{}}}],["isoptional",{"_index":372,"title":{},"body":{"classes/CommentDto.html":{},"classes/CreateDto.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{}}}],["isoptional()@isstring",{"_index":413,"title":{},"body":{"classes/FindDto.html":{}}}],["isstring",{"_index":373,"title":{},"body":{"classes/CommentDto.html":{},"classes/CreateDto.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/SignupDto.html":{},"classes/UserExistDto.html":{}}}],["iv",{"_index":449,"title":{},"body":{"injectables/HelperService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":267,"title":{},"body":{"injectables/ArticlesService.html":{},"index.html":{}}}],["joincolumn",{"_index":140,"title":{},"body":{"classes/Articles.html":{},"classes/Comments.html":{}}}],["json.parse(decrpyted.tostring('utf8",{"_index":485,"title":{},"body":{"injectables/HelperService.html":{}}}],["json.stringify(data",{"_index":472,"title":{},"body":{"injectables/HelperService.html":{}}}],["key",{"_index":443,"title":{},"body":{"injectables/HelperService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["keys",{"_index":486,"title":{},"body":{"injectables/HelperService.html":{}}}],["l2ic0togfhmgarvy",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lastname",{"_index":688,"title":{},"body":{"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["later",{"_index":260,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["left",{"_index":266,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["licensed",{"_index":813,"title":{},"body":{"index.html":{}}}],["like(@req",{"_index":196,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["like(req",{"_index":171,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{}}}],["like,sorry",{"_index":307,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["likedto",{"_index":172,"title":{"classes/LikeDto.html":{}},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/CommentDto.html":{},"classes/CreateDto.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{},"coverage.html":{}}}],["likedto):promise",{"_index":197,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["likes",{"_index":118,"title":{},"body":{"classes/Articles.html":{},"injectables/ArticlesService.html":{},"classes/Comments.html":{},"classes/Reply.html":{},"miscellaneous/variables.html":{}}}],["limit",{"_index":282,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["location",{"_index":689,"title":{},"body":{"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["loged",{"_index":667,"title":{},"body":{"injectables/UserService.html":{}}}],["login",{"_index":540,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["login(@body",{"_index":565,"title":{},"body":{"controllers/UserController.html":{}}}],["login(logindto",{"_index":543,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["logindto",{"_index":495,"title":{"classes/LoginDto.html":{}},"body":{"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/SignupDto.html":{},"controllers/UserController.html":{},"classes/UserExistDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["logindto):promise",{"_index":566,"title":{},"body":{"controllers/UserController.html":{}}}],["logindto.countrycode",{"_index":651,"title":{},"body":{"injectables/UserService.html":{}}}],["logindto.mobilenum",{"_index":650,"title":{},"body":{"injectables/UserService.html":{}}}],["logindto.password",{"_index":647,"title":{},"body":{"injectables/UserService.html":{}}}],["logindto.uheader",{"_index":669,"title":{},"body":{"injectables/UserService.html":{}}}],["logout",{"_index":160,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["logout(@req",{"_index":192,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/UserController.html":{}}}],["logout(req",{"_index":175,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["logoutdto",{"_index":511,"title":{"classes/LogoutDto.html":{}},"body":{"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/SignupDto.html":{},"controllers/UserController.html":{},"classes/UserExistDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["logoutdto):promise",{"_index":569,"title":{},"body":{"controllers/UserController.html":{}}}],["mangement/dto/user.dto.ts",{"_index":497,"title":{},"body":{"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/SignupDto.html":{},"classes/UserExistDto.html":{},"coverage.html":{}}}],["mangement/dto/user.dto.ts:10",{"_index":535,"title":{},"body":{"classes/SignupDto.html":{}}}],["mangement/dto/user.dto.ts:14",{"_index":534,"title":{},"body":{"classes/SignupDto.html":{}}}],["mangement/dto/user.dto.ts:18",{"_index":531,"title":{},"body":{"classes/SignupDto.html":{}}}],["mangement/dto/user.dto.ts:23",{"_index":532,"title":{},"body":{"classes/SignupDto.html":{}}}],["mangement/dto/user.dto.ts:27",{"_index":536,"title":{},"body":{"classes/SignupDto.html":{}}}],["mangement/dto/user.dto.ts:31",{"_index":533,"title":{},"body":{"classes/SignupDto.html":{}}}],["mangement/dto/user.dto.ts:36",{"_index":537,"title":{},"body":{"classes/SignupDto.html":{}}}],["mangement/dto/user.dto.ts:45",{"_index":573,"title":{},"body":{"classes/UserExistDto.html":{}}}],["mangement/dto/user.dto.ts:50",{"_index":571,"title":{},"body":{"classes/UserExistDto.html":{}}}],["mangement/dto/user.dto.ts:54",{"_index":572,"title":{},"body":{"classes/UserExistDto.html":{}}}],["mangement/dto/user.dto.ts:58",{"_index":574,"title":{},"body":{"classes/UserExistDto.html":{}}}],["mangement/dto/user.dto.ts:6",{"_index":538,"title":{},"body":{"classes/SignupDto.html":{}}}],["mangement/dto/user.dto.ts:65",{"_index":503,"title":{},"body":{"classes/LoginDto.html":{}}}],["mangement/dto/user.dto.ts:70",{"_index":501,"title":{},"body":{"classes/LoginDto.html":{}}}],["mangement/dto/user.dto.ts:74",{"_index":504,"title":{},"body":{"classes/LoginDto.html":{}}}],["mangement/dto/user.dto.ts:78",{"_index":502,"title":{},"body":{"classes/LoginDto.html":{}}}],["mangement/dto/user.dto.ts:82",{"_index":505,"title":{},"body":{"classes/LoginDto.html":{}}}],["mangement/dto/user.dto.ts:89",{"_index":513,"title":{},"body":{"classes/LogoutDto.html":{}}}],["mangement/dto/user.dto.ts:93",{"_index":512,"title":{},"body":{"classes/LogoutDto.html":{}}}],["mangement/dto/user.dto.ts:97",{"_index":514,"title":{},"body":{"classes/LogoutDto.html":{}}}],["mangement/user.controller",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["mangement/user.controller.ts",{"_index":539,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["mangement/user.controller.ts:11",{"_index":550,"title":{},"body":{"controllers/UserController.html":{}}}],["mangement/user.controller.ts:17",{"_index":553,"title":{},"body":{"controllers/UserController.html":{}}}],["mangement/user.controller.ts:23",{"_index":545,"title":{},"body":{"controllers/UserController.html":{}}}],["mangement/user.controller.ts:29",{"_index":547,"title":{},"body":{"controllers/UserController.html":{}}}],["mangement/user.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["mangement/user.module.ts",{"_index":575,"title":{},"body":{"modules/UserModule.html":{}}}],["mangement/user.service",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["mangement/user.service.ts",{"_index":580,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["mangement/user.service.ts:109",{"_index":582,"title":{},"body":{"injectables/UserService.html":{}}}],["mangement/user.service.ts:12",{"_index":581,"title":{},"body":{"injectables/UserService.html":{}}}],["mangement/user.service.ts:182",{"_index":583,"title":{},"body":{"injectables/UserService.html":{}}}],["mangement/user.service.ts:20",{"_index":586,"title":{},"body":{"injectables/UserService.html":{}}}],["mangement/user.service.ts:31",{"_index":584,"title":{},"body":{"injectables/UserService.html":{}}}],["manytoone",{"_index":387,"title":{},"body":{"classes/Comments.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"classes/ArticlesRepositry.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthUserMiddleware.html":{},"classes/CommentDto.html":{},"classes/Comments.html":{},"classes/CommentsRepositry.html":{},"classes/CreateDto.html":{},"classes/Devices.html":{},"classes/DevicesRepositry.html":{},"classes/FindDto.html":{},"injectables/HelperService.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/Reply.html":{},"classes/ReplyRepositry.html":{},"classes/SignupDto.html":{},"controllers/UserController.html":{},"classes/UserExistDto.html":{},"modules/UserModule.html":{},"classes/UserRepositry.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":665,"title":{},"body":{"injectables/UserService.html":{}}}],["metadata",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthService.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/HelperService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middlewareconsumer",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":776,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":812,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":596,"title":{},"body":{"injectables/UserService.html":{}}}],["mobilenum",{"_index":499,"title":{},"body":{"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/SignupDto.html":{},"classes/UserExistDto.html":{}}}],["mobilenumber",{"_index":590,"title":{},"body":{"injectables/UserService.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["mobileviryfy",{"_index":690,"title":{},"body":{"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":802,"title":{},"body":{"index.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticlesModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["monbile",{"_index":649,"title":{},"body":{"injectables/UserService.html":{}}}],["mongoose",{"_index":139,"title":{},"body":{"classes/Articles.html":{},"classes/Comments.html":{},"classes/Devices.html":{},"classes/Users.html":{},"dependencies.html":{}}}],["mongoose.schema",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":824,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":766,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/HelperService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":791,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/HelperService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/HelperService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":325,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{}}}],["new",{"_index":240,"title":{},"body":{"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":329,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{}}}],["node.js",{"_index":782,"title":{},"body":{"index.html":{}}}],["npm",{"_index":795,"title":{},"body":{"index.html":{}}}],["nullable",{"_index":718,"title":{},"body":{"classes/Users.html":{}}}],["number",{"_index":131,"title":{},"body":{"classes/Articles.html":{},"classes/CommentDto.html":{},"classes/Comments.html":{},"classes/CreateDto.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{},"classes/Reply.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":138,"title":{},"body":{"classes/Articles.html":{},"classes/Comments.html":{},"classes/Devices.html":{},"classes/Users.html":{}}}],["objectidcolumn",{"_index":144,"title":{},"body":{"classes/Articles.html":{},"classes/Comments.html":{},"classes/Devices.html":{},"classes/Users.html":{}}}],["offset",{"_index":284,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["oldpassword",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onetomany",{"_index":143,"title":{},"body":{"classes/Articles.html":{}}}],["onetomany(type",{"_index":150,"title":{},"body":{"classes/Articles.html":{}}}],["open",{"_index":814,"title":{},"body":{"index.html":{}}}],["optional",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/HelperService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["order",{"_index":279,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["out",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":831,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":752,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":340,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{}}}],["pagenum",{"_index":299,"title":{},"body":{"injectables/ArticlesService.html":{},"classes/CommentDto.html":{},"classes/CreateDto.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{}}}],["parameters",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/HelperService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["password",{"_index":500,"title":{},"body":{"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/SignupDto.html":{},"classes/UserExistDto.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["password\",\"usertoken\",\"oldpassword\",\"createdat\",\"updatedat",{"_index":487,"title":{},"body":{"injectables/HelperService.html":{}}}],["pirthdate",{"_index":691,"title":{},"body":{"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":257,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["port",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":179,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/UserController.html":{}}}],["post(\"/login",{"_index":564,"title":{},"body":{"controllers/UserController.html":{}}}],["post(\"/logout",{"_index":568,"title":{},"body":{"controllers/UserController.html":{}}}],["post(\"/signup",{"_index":558,"title":{},"body":{"controllers/UserController.html":{}}}],["post(\"comment",{"_index":199,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["post(\"create",{"_index":191,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["post(\"like",{"_index":195,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["post('/')@usepipes(validationpipe",{"_index":163,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["post('/exist",{"_index":561,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/exist')@usepipes(validationpipe",{"_index":552,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/login')@usepipes(validationpipe",{"_index":544,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/logout')@usepipes(validationpipe",{"_index":546,"title":{},"body":{"controllers/UserController.html":{}}}],["post('/signup')@usepipes(validationpipe",{"_index":549,"title":{},"body":{"controllers/UserController.html":{}}}],["post('comment')@usepipes(validationpipe",{"_index":168,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["post('create')@usepipes(validationpipe",{"_index":177,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["post('like')@usepipes(validationpipe",{"_index":173,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["prefix",{"_index":157,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/UserController.html":{}}}],["primarycolumn",{"_index":120,"title":{},"body":{"classes/Articles.html":{},"classes/Comments.html":{},"classes/Devices.html":{},"classes/Reply.html":{},"classes/Users.html":{}}}],["primarygeneratedcolumn",{"_index":717,"title":{},"body":{"classes/Users.html":{}}}],["private",{"_index":234,"title":{},"body":{"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/UserService.html":{}}}],["production",{"_index":804,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":781,"title":{},"body":{"index.html":{}}}],["project",{"_index":815,"title":{},"body":{"index.html":{}}}],["promise",{"_index":165,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["promisify",{"_index":441,"title":{},"body":{"injectables/HelperService.html":{}}}],["promisify(scrypt)(data.fingerprint",{"_index":461,"title":{},"body":{"injectables/HelperService.html":{}}}],["properties",{"_index":111,"title":{},"body":{"classes/Articles.html":{},"classes/CommentDto.html":{},"classes/Comments.html":{},"classes/CreateDto.html":{},"classes/Devices.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/Reply.html":{},"classes/SignupDto.html":{},"classes/UserExistDto.html":{},"classes/Users.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["qery",{"_index":264,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["qerycount",{"_index":292,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["randombytes",{"_index":439,"title":{},"body":{"injectables/HelperService.html":{}}}],["randombytes(16",{"_index":450,"title":{},"body":{"injectables/HelperService.html":{}}}],["read",{"_index":823,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["recognized",{"_index":643,"title":{},"body":{"injectables/UserService.html":{}}}],["reflect",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["reply",{"_index":515,"title":{"classes/Reply.html":{}},"body":{"classes/Reply.html":{},"classes/ReplyRepositry.html":{},"coverage.html":{}}}],["reply.entity",{"_index":529,"title":{},"body":{"classes/ReplyRepositry.html":{}}}],["reply/reply.entity.js",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replyid",{"_index":517,"title":{},"body":{"classes/Reply.html":{},"miscellaneous/variables.html":{}}}],["replyrepositry",{"_index":89,"title":{"classes/ReplyRepositry.html":{}},"body":{"modules/AppModule.html":{},"classes/ReplyRepositry.html":{},"coverage.html":{}}}],["replyschema",{"_index":745,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repository",{"_index":206,"title":{},"body":{"classes/ArticlesRepositry.html":{},"classes/CommentsRepositry.html":{},"classes/DevicesRepositry.html":{},"classes/ReplyRepositry.html":{},"classes/UserRepositry.html":{},"index.html":{}}}],["req",{"_index":170,"title":{},"body":{"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["req.body.token",{"_index":335,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{}}}],["req.me",{"_index":350,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{}}}],["req.me.fingerprint",{"_index":678,"title":{},"body":{"injectables/UserService.html":{}}}],["req.me.role",{"_index":351,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{}}}],["req.me.userid",{"_index":243,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/UserService.html":{}}}],["require('crypto",{"_index":436,"title":{},"body":{"injectables/HelperService.html":{},"miscellaneous/variables.html":{}}}],["require('dotenv').config",{"_index":452,"title":{},"body":{"injectables/HelperService.html":{}}}],["require('uuid",{"_index":434,"title":{},"body":{"injectables/HelperService.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":328,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{}}}],["reset",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"classes/ArticlesRepositry.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthUserMiddleware.html":{},"classes/CommentDto.html":{},"classes/Comments.html":{},"classes/CommentsRepositry.html":{},"classes/CreateDto.html":{},"classes/Devices.html":{},"classes/DevicesRepositry.html":{},"classes/FindDto.html":{},"injectables/HelperService.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/Reply.html":{},"classes/ReplyRepositry.html":{},"classes/SignupDto.html":{},"controllers/UserController.html":{},"classes/UserExistDto.html":{},"modules/UserModule.html":{},"classes/UserRepositry.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"classes/ArticlesRepositry.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthUserMiddleware.html":{},"classes/CommentDto.html":{},"classes/Comments.html":{},"classes/CommentsRepositry.html":{},"classes/CreateDto.html":{},"classes/Devices.html":{},"classes/DevicesRepositry.html":{},"classes/FindDto.html":{},"injectables/HelperService.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/Reply.html":{},"classes/ReplyRepositry.html":{},"classes/SignupDto.html":{},"controllers/UserController.html":{},"classes/UserExistDto.html":{},"modules/UserModule.html":{},"classes/UserRepositry.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"injectables/HelperService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthService.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/HelperService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":509,"title":{},"body":{"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/SignupDto.html":{},"classes/UserExistDto.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":799,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":454,"title":{},"body":{"injectables/HelperService.html":{}}}],["same",{"_index":657,"title":{},"body":{"injectables/UserService.html":{}}}],["scalable",{"_index":786,"title":{},"body":{"index.html":{}}}],["scrypt",{"_index":440,"title":{},"body":{"injectables/HelperService.html":{}}}],["select",{"_index":265,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["server",{"_index":787,"title":{},"body":{"index.html":{}}}],["side",{"_index":788,"title":{},"body":{"index.html":{}}}],["signup",{"_index":541,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["signup(@body",{"_index":559,"title":{},"body":{"controllers/UserController.html":{}}}],["signup(signupdto",{"_index":548,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["signupdto",{"_index":506,"title":{"classes/SignupDto.html":{}},"body":{"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/SignupDto.html":{},"controllers/UserController.html":{},"classes/UserExistDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["signupdto.country",{"_index":612,"title":{},"body":{"injectables/UserService.html":{}}}],["signupdto.countrycode",{"_index":615,"title":{},"body":{"injectables/UserService.html":{}}}],["signupdto.mobilenum",{"_index":595,"title":{},"body":{"injectables/UserService.html":{}}}],["signupdto.password",{"_index":594,"title":{},"body":{"injectables/UserService.html":{}}}],["signupdto.role",{"_index":619,"title":{},"body":{"injectables/UserService.html":{}}}],["signupdto.uheader",{"_index":635,"title":{},"body":{"injectables/UserService.html":{}}}],["signupdto.username",{"_index":605,"title":{},"body":{"injectables/UserService.html":{}}}],["something",{"_index":289,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"controllers/ArticlesController.html":{},"modules/ArticlesModule.html":{},"classes/ArticlesRepositry.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthUserMiddleware.html":{},"classes/CommentDto.html":{},"classes/Comments.html":{},"classes/CommentsRepositry.html":{},"classes/CreateDto.html":{},"classes/Devices.html":{},"classes/DevicesRepositry.html":{},"classes/FindDto.html":{},"injectables/HelperService.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/Reply.html":{},"classes/ReplyRepositry.html":{},"classes/SignupDto.html":{},"controllers/UserController.html":{},"classes/UserExistDto.html":{},"modules/UserModule.html":{},"classes/UserRepositry.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"index.html":{}}}],["sponsors",{"_index":818,"title":{},"body":{"index.html":{}}}],["src/.../articles.schema.ts",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../comments.schema.ts",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../devices.schema.ts",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../helper.service.ts",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":778,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../reply.schema.ts",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../typeorm.config.ts",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:28",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":102,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":103,"title":{},"body":{"injectables/AppService.html":{}}}],["src/component/articles/articles.controller.ts",{"_index":156,"title":{},"body":{"controllers/ArticlesController.html":{},"coverage.html":{}}}],["src/component/articles/articles.controller.ts:11",{"_index":164,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/component/articles/articles.controller.ts:17",{"_index":178,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/component/articles/articles.controller.ts:22",{"_index":174,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/component/articles/articles.controller.ts:27",{"_index":169,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["src/component/articles/articles.module.ts",{"_index":203,"title":{},"body":{"modules/ArticlesModule.html":{}}}],["src/component/articles/articles.service.ts",{"_index":210,"title":{},"body":{"injectables/ArticlesService.html":{},"coverage.html":{}}}],["src/component/articles/articles.service.ts:116",{"_index":222,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/component/articles/articles.service.ts:128",{"_index":217,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/component/articles/articles.service.ts:14",{"_index":216,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/component/articles/articles.service.ts:30",{"_index":219,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/component/articles/articles.service.ts:51",{"_index":221,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["src/component/articles/dto/articles.dto.ts",{"_index":361,"title":{},"body":{"classes/CommentDto.html":{},"classes/CreateDto.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{},"coverage.html":{}}}],["src/component/articles/dto/articles.dto.ts:10",{"_index":393,"title":{},"body":{"classes/CreateDto.html":{}}}],["src/component/articles/dto/articles.dto.ts:14",{"_index":396,"title":{},"body":{"classes/CreateDto.html":{}}}],["src/component/articles/dto/articles.dto.ts:18",{"_index":394,"title":{},"body":{"classes/CreateDto.html":{}}}],["src/component/articles/dto/articles.dto.ts:22",{"_index":392,"title":{},"body":{"classes/CreateDto.html":{}}}],["src/component/articles/dto/articles.dto.ts:29",{"_index":419,"title":{},"body":{"classes/FindDto.html":{}}}],["src/component/articles/dto/articles.dto.ts:33",{"_index":414,"title":{},"body":{"classes/FindDto.html":{}}}],["src/component/articles/dto/articles.dto.ts:37",{"_index":415,"title":{},"body":{"classes/FindDto.html":{}}}],["src/component/articles/dto/articles.dto.ts:41",{"_index":416,"title":{},"body":{"classes/FindDto.html":{}}}],["src/component/articles/dto/articles.dto.ts:45",{"_index":417,"title":{},"body":{"classes/FindDto.html":{}}}],["src/component/articles/dto/articles.dto.ts:49",{"_index":418,"title":{},"body":{"classes/FindDto.html":{}}}],["src/component/articles/dto/articles.dto.ts:53",{"_index":420,"title":{},"body":{"classes/FindDto.html":{}}}],["src/component/articles/dto/articles.dto.ts:6",{"_index":395,"title":{},"body":{"classes/CreateDto.html":{}}}],["src/component/articles/dto/articles.dto.ts:60",{"_index":368,"title":{},"body":{"classes/CommentDto.html":{}}}],["src/component/articles/dto/articles.dto.ts:64",{"_index":367,"title":{},"body":{"classes/CommentDto.html":{}}}],["src/component/articles/dto/articles.dto.ts:68",{"_index":369,"title":{},"body":{"classes/CommentDto.html":{}}}],["src/component/articles/dto/articles.dto.ts:72",{"_index":365,"title":{},"body":{"classes/CommentDto.html":{}}}],["src/component/articles/dto/articles.dto.ts:76",{"_index":366,"title":{},"body":{"classes/CommentDto.html":{}}}],["src/component/articles/dto/articles.dto.ts:83",{"_index":493,"title":{},"body":{"classes/LikeDto.html":{}}}],["src/component/articles/dto/articles.dto.ts:87",{"_index":492,"title":{},"body":{"classes/LikeDto.html":{}}}],["src/component/articles/dto/articles.dto.ts:91",{"_index":494,"title":{},"body":{"classes/LikeDto.html":{}}}],["src/component/articles/dto/articles.dto.ts:96",{"_index":491,"title":{},"body":{"classes/LikeDto.html":{}}}],["src/component/user",{"_index":496,"title":{},"body":{"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/SignupDto.html":{},"controllers/UserController.html":{},"classes/UserExistDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/config/auth/auth",{"_index":322,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"coverage.html":{}}}],["src/config/auth/auth.module.ts",{"_index":354,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/config/auth/auth.service.ts",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/config/auth/auth.service.ts:5",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/config/database",{"_index":731,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/helper/helper.service.ts",{"_index":421,"title":{},"body":{"injectables/HelperService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/helper/helper.service.ts:15",{"_index":433,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/config/helper/helper.service.ts:24",{"_index":429,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/config/helper/helper.service.ts:35",{"_index":431,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/config/helper/helper.service.ts:54",{"_index":427,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/config/schemas/articles/articles.entity.ts",{"_index":108,"title":{},"body":{"classes/Articles.html":{},"coverage.html":{}}}],["src/config/schemas/articles/articles.entity.ts:19",{"_index":121,"title":{},"body":{"classes/Articles.html":{}}}],["src/config/schemas/articles/articles.entity.ts:23",{"_index":123,"title":{},"body":{"classes/Articles.html":{}}}],["src/config/schemas/articles/articles.entity.ts:26",{"_index":137,"title":{},"body":{"classes/Articles.html":{}}}],["src/config/schemas/articles/articles.entity.ts:29",{"_index":125,"title":{},"body":{"classes/Articles.html":{}}}],["src/config/schemas/articles/articles.entity.ts:32",{"_index":136,"title":{},"body":{"classes/Articles.html":{}}}],["src/config/schemas/articles/articles.entity.ts:35",{"_index":129,"title":{},"body":{"classes/Articles.html":{}}}],["src/config/schemas/articles/articles.entity.ts:38",{"_index":130,"title":{},"body":{"classes/Articles.html":{}}}],["src/config/schemas/articles/articles.entity.ts:41",{"_index":127,"title":{},"body":{"classes/Articles.html":{}}}],["src/config/schemas/articles/articles.repositry.ts",{"_index":205,"title":{},"body":{"classes/ArticlesRepositry.html":{},"coverage.html":{}}}],["src/config/schemas/articles/articles.schema.ts",{"_index":736,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/schemas/comments/comments.entity.ts",{"_index":376,"title":{},"body":{"classes/Comments.html":{},"coverage.html":{}}}],["src/config/schemas/comments/comments.entity.ts:19",{"_index":380,"title":{},"body":{"classes/Comments.html":{}}}],["src/config/schemas/comments/comments.entity.ts:22",{"_index":378,"title":{},"body":{"classes/Comments.html":{}}}],["src/config/schemas/comments/comments.entity.ts:25",{"_index":386,"title":{},"body":{"classes/Comments.html":{}}}],["src/config/schemas/comments/comments.entity.ts:28",{"_index":379,"title":{},"body":{"classes/Comments.html":{}}}],["src/config/schemas/comments/comments.entity.ts:31",{"_index":384,"title":{},"body":{"classes/Comments.html":{}}}],["src/config/schemas/comments/comments.entity.ts:34",{"_index":382,"title":{},"body":{"classes/Comments.html":{}}}],["src/config/schemas/comments/comments.entity.ts:37",{"_index":383,"title":{},"body":{"classes/Comments.html":{}}}],["src/config/schemas/comments/comments.entity.ts:40",{"_index":381,"title":{},"body":{"classes/Comments.html":{}}}],["src/config/schemas/comments/comments.entity.ts:43",{"_index":385,"title":{},"body":{"classes/Comments.html":{}}}],["src/config/schemas/comments/comments.repositry.ts",{"_index":389,"title":{},"body":{"classes/CommentsRepositry.html":{},"coverage.html":{}}}],["src/config/schemas/comments/comments.schema.ts",{"_index":739,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/schemas/devices/devices.entity.ts",{"_index":398,"title":{},"body":{"classes/Devices.html":{},"coverage.html":{}}}],["src/config/schemas/devices/devices.entity.ts:15",{"_index":404,"title":{},"body":{"classes/Devices.html":{}}}],["src/config/schemas/devices/devices.entity.ts:18",{"_index":409,"title":{},"body":{"classes/Devices.html":{}}}],["src/config/schemas/devices/devices.entity.ts:21",{"_index":403,"title":{},"body":{"classes/Devices.html":{}}}],["src/config/schemas/devices/devices.entity.ts:24",{"_index":405,"title":{},"body":{"classes/Devices.html":{}}}],["src/config/schemas/devices/devices.entity.ts:27",{"_index":407,"title":{},"body":{"classes/Devices.html":{}}}],["src/config/schemas/devices/devices.entity.ts:30",{"_index":406,"title":{},"body":{"classes/Devices.html":{}}}],["src/config/schemas/devices/devices.entity.ts:33",{"_index":402,"title":{},"body":{"classes/Devices.html":{}}}],["src/config/schemas/devices/devices.entity.ts:36",{"_index":408,"title":{},"body":{"classes/Devices.html":{}}}],["src/config/schemas/devices/devices.repositry.ts",{"_index":410,"title":{},"body":{"classes/DevicesRepositry.html":{},"coverage.html":{}}}],["src/config/schemas/devices/devices.schema.ts",{"_index":741,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/schemas/reply/reply.entity.ts",{"_index":516,"title":{},"body":{"classes/Reply.html":{},"coverage.html":{}}}],["src/config/schemas/reply/reply.entity.ts:14",{"_index":525,"title":{},"body":{"classes/Reply.html":{}}}],["src/config/schemas/reply/reply.entity.ts:17",{"_index":520,"title":{},"body":{"classes/Reply.html":{}}}],["src/config/schemas/reply/reply.entity.ts:20",{"_index":518,"title":{},"body":{"classes/Reply.html":{}}}],["src/config/schemas/reply/reply.entity.ts:23",{"_index":527,"title":{},"body":{"classes/Reply.html":{}}}],["src/config/schemas/reply/reply.entity.ts:26",{"_index":519,"title":{},"body":{"classes/Reply.html":{}}}],["src/config/schemas/reply/reply.entity.ts:29",{"_index":524,"title":{},"body":{"classes/Reply.html":{}}}],["src/config/schemas/reply/reply.entity.ts:32",{"_index":522,"title":{},"body":{"classes/Reply.html":{}}}],["src/config/schemas/reply/reply.entity.ts:35",{"_index":523,"title":{},"body":{"classes/Reply.html":{}}}],["src/config/schemas/reply/reply.entity.ts:38",{"_index":521,"title":{},"body":{"classes/Reply.html":{}}}],["src/config/schemas/reply/reply.entity.ts:41",{"_index":526,"title":{},"body":{"classes/Reply.html":{}}}],["src/config/schemas/reply/reply.repositry.ts",{"_index":528,"title":{},"body":{"classes/ReplyRepositry.html":{},"coverage.html":{}}}],["src/config/schemas/reply/reply.schema.ts",{"_index":744,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/schemas/user/user.entity.ts",{"_index":681,"title":{},"body":{"classes/Users.html":{},"coverage.html":{}}}],["src/config/schemas/user/user.entity.ts:16",{"_index":714,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.entity.ts:19",{"_index":715,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.entity.ts:22",{"_index":710,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.entity.ts:25",{"_index":699,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.entity.ts:28",{"_index":706,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.entity.ts:31",{"_index":701,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.entity.ts:34",{"_index":694,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.entity.ts:37",{"_index":708,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.entity.ts:40",{"_index":695,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.entity.ts:43",{"_index":693,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.entity.ts:46",{"_index":707,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.entity.ts:49",{"_index":712,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.entity.ts:52",{"_index":700,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.entity.ts:55",{"_index":711,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.entity.ts:58",{"_index":697,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.entity.ts:61",{"_index":698,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.entity.ts:64",{"_index":709,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.entity.ts:67",{"_index":702,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.entity.ts:70",{"_index":704,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.entity.ts:73",{"_index":705,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.entity.ts:76",{"_index":703,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.entity.ts:79",{"_index":716,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.entity.ts:83",{"_index":696,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.entity.ts:86",{"_index":713,"title":{},"body":{"classes/Users.html":{}}}],["src/config/schemas/user/user.repositry.ts",{"_index":577,"title":{},"body":{"classes/UserRepositry.html":{},"coverage.html":{}}}],["src/config/schemas/user/user.schema.ts",{"_index":747,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":749,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":800,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":803,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":805,"title":{},"body":{"index.html":{}}}],["started",{"_index":780,"title":{"index.html":{}},"body":{}}],["starter",{"_index":793,"title":{},"body":{"index.html":{}}}],["statements",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Articles.html":{},"classes/CommentDto.html":{},"classes/Comments.html":{},"classes/CreateDto.html":{},"classes/Devices.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/Reply.html":{},"classes/SignupDto.html":{},"classes/UserExistDto.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":819,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":827,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":808,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":811,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":810,"title":{},"body":{"index.html":{}}}],["tests",{"_index":807,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":817,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.articlesrepositry.findone(likedto.artid",{"_index":300,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesrepositry.save(articledata",{"_index":253,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesrepositry.update(likedto.artid",{"_index":302,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.articlesservice.comment(req",{"_index":202,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.articlesservice.createart(req",{"_index":194,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.articlesservice.getall(finddto",{"_index":190,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.articlesservice.like(req",{"_index":198,"title":{},"body":{"controllers/ArticlesController.html":{}}}],["this.commentsrepositry.save(commentdata",{"_index":320,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["this.devicerepositry.findone",{"_index":658,"title":{},"body":{"injectables/UserService.html":{}}}],["this.devicerepositry.save(devicedata",{"_index":642,"title":{},"body":{"injectables/UserService.html":{}}}],["this.devicerepositry.update",{"_index":675,"title":{},"body":{"injectables/UserService.html":{}}}],["this.helperservice.criptodata",{"_index":601,"title":{},"body":{"injectables/UserService.html":{}}}],["this.helperservice.decrept(data",{"_index":349,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{}}}],["this.helperservice.generatehash",{"_index":593,"title":{},"body":{"injectables/UserService.html":{}}}],["this.helperservice.generatehash(logindto.fingerprint",{"_index":656,"title":{},"body":{"injectables/UserService.html":{}}}],["this.helperservice.generatehash(req.body.fingerprint",{"_index":343,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{}}}],["this.helperservice.generatehash(signupdto.fingerprint",{"_index":600,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepositry.findone",{"_index":333,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/UserService.html":{}}}],["this.userrepositry.save(user",{"_index":671,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepositry.save(userdata",{"_index":640,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepositry.update",{"_index":679,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.login(logindto",{"_index":567,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.logout(req",{"_index":570,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.signup(signupdto",{"_index":560,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.userexist(signupdto",{"_index":563,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":254,"title":{},"body":{"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/UserService.html":{}}}],["time",{"_index":256,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["title",{"_index":119,"title":{},"body":{"classes/Articles.html":{},"injectables/ArticlesService.html":{},"classes/CommentDto.html":{},"classes/CreateDto.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":347,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"classes/CommentDto.html":{},"classes/CreateDto.html":{},"classes/FindDto.html":{},"injectables/HelperService.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/SignupDto.html":{},"classes/UserExistDto.html":{},"injectables/UserService.html":{}}}],["tokendecript",{"_index":348,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{}}}],["total",{"_index":293,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["transformer",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":245,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":258,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/HelperService.html":{},"injectables/UserService.html":{}}}],["trye",{"_index":308,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["type",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"classes/Articles.html":{},"controllers/ArticlesController.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"classes/CommentDto.html":{},"classes/Comments.html":{},"classes/CreateDto.html":{},"classes/Devices.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/Reply.html":{},"classes/SignupDto.html":{},"controllers/UserController.html":{},"classes/UserExistDto.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":145,"title":{},"body":{"classes/Articles.html":{},"classes/ArticlesRepositry.html":{},"injectables/ArticlesService.html":{},"classes/Comments.html":{},"classes/CommentsRepositry.html":{},"classes/Devices.html":{},"classes/DevicesRepositry.html":{},"classes/Reply.html":{},"classes/ReplyRepositry.html":{},"classes/UserRepositry.html":{},"classes/Users.html":{},"dependencies.html":{}}}],["typeormconfig",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmodule.forfeature([devicesrepositry,userrepositry,articlesrepositry,commentsrepositry,replyrepositry",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmodule.forroot(typeormconfig",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":792,"title":{},"body":{"index.html":{}}}],["uheader",{"_index":363,"title":{},"body":{"classes/CommentDto.html":{},"classes/CreateDto.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/SignupDto.html":{},"classes/UserExistDto.html":{}}}],["undefined",{"_index":135,"title":{},"body":{"classes/Articles.html":{},"classes/Comments.html":{},"classes/Users.html":{}}}],["unit",{"_index":806,"title":{},"body":{"index.html":{}}}],["updatedat",{"_index":155,"title":{},"body":{"classes/Articles.html":{},"classes/Comments.html":{},"classes/Devices.html":{},"classes/Reply.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["updatedatecolumn",{"_index":141,"title":{},"body":{"classes/Articles.html":{},"classes/Comments.html":{},"classes/Devices.html":{},"classes/Reply.html":{},"classes/Users.html":{}}}],["use",{"_index":326,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{}}}],["use(req",{"_index":327,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{}}}],["usepipes",{"_index":180,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/UserController.html":{}}}],["usepipes(validationpipe",{"_index":186,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":332,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.controller",{"_index":576,"title":{},"body":{"modules/UserModule.html":{}}}],["user.entity",{"_index":578,"title":{},"body":{"classes/UserRepositry.html":{}}}],["user.islogin",{"_index":663,"title":{},"body":{"injectables/UserService.html":{}}}],["user.middleware",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["user.middleware.ts",{"_index":323,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"coverage.html":{}}}],["user.middleware.ts:17",{"_index":360,"title":{},"body":{"injectables/AuthUserMiddleware.html":{}}}],["user.middleware.ts:42",{"_index":330,"title":{},"body":{"classes/AuthAutherMiddleware.html":{}}}],["user.middleware.ts:8",{"_index":359,"title":{},"body":{"injectables/AuthUserMiddleware.html":{}}}],["user.password",{"_index":664,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":555,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.userid",{"_index":346,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/UserService.html":{}}}],["user.usertoken",{"_index":668,"title":{},"body":{"injectables/UserService.html":{}}}],["user/user.entity",{"_index":149,"title":{},"body":{"classes/Articles.html":{},"classes/Comments.html":{}}}],["user/user.entity.js",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userauth",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercontroller",{"_index":50,"title":{"controllers/UserController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdata",{"_index":603,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.address",{"_index":616,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.country",{"_index":611,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.countrycode",{"_index":614,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.email",{"_index":622,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.emailvirefy",{"_index":623,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.firstname",{"_index":608,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.gender",{"_index":620,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.image",{"_index":610,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.isactive",{"_index":625,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.isblocked",{"_index":628,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.isdeleted",{"_index":626,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.islogin",{"_index":627,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.lastname",{"_index":609,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.location",{"_index":617,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.mobilenumber",{"_index":613,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.mobileviryfy",{"_index":624,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.oldpassword",{"_index":630,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.password",{"_index":606,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.pirthdate",{"_index":621,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.role",{"_index":618,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.userid",{"_index":607,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.username",{"_index":604,"title":{},"body":{"injectables/UserService.html":{}}}],["userdata.usertoken",{"_index":629,"title":{},"body":{"injectables/UserService.html":{}}}],["userexist",{"_index":542,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["userexist(@body",{"_index":562,"title":{},"body":{"controllers/UserController.html":{}}}],["userexist(signupdto",{"_index":551,"title":{},"body":{"controllers/UserController.html":{}}}],["userexist(userexistdto",{"_index":585,"title":{},"body":{"injectables/UserService.html":{}}}],["userexistdto",{"_index":510,"title":{"classes/UserExistDto.html":{}},"body":{"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/SignupDto.html":{},"controllers/UserController.html":{},"classes/UserExistDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userexistdto.countrycode",{"_index":589,"title":{},"body":{"injectables/UserService.html":{}}}],["userexistdto.mobilenum",{"_index":591,"title":{},"body":{"injectables/UserService.html":{}}}],["userid",{"_index":345,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"classes/Comments.html":{},"classes/Devices.html":{},"classes/Reply.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["usermodule",{"_index":42,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":507,"title":{},"body":{"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/SignupDto.html":{},"classes/UserExistDto.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["userrepositry",{"_index":81,"title":{"classes/UserRepositry.html":{}},"body":{"modules/AppModule.html":{},"injectables/ArticlesService.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"classes/UserRepositry.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userres",{"_index":639,"title":{},"body":{"injectables/UserService.html":{}}}],["userres.usertoken",{"_index":645,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":148,"title":{"classes/Users.html":{}},"body":{"classes/Articles.html":{},"classes/Comments.html":{},"classes/UserRepositry.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"coverage.html":{}}}],["users.userid",{"_index":151,"title":{},"body":{"classes/Articles.html":{}}}],["userschema",{"_index":748,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":45,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice,helperservice",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["userservice:userservice",{"_index":557,"title":{},"body":{"controllers/UserController.html":{}}}],["usertoken",{"_index":334,"title":{},"body":{"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{},"injectables/UserService.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["userupdates",{"_index":670,"title":{},"body":{"injectables/UserService.html":{}}}],["userupdates.usertoken",{"_index":677,"title":{},"body":{"injectables/UserService.html":{}}}],["util",{"_index":442,"title":{},"body":{"injectables/HelperService.html":{}}}],["uuid",{"_index":230,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/HelperService.html":{},"injectables/UserService.html":{}}}],["uuidv4",{"_index":229,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/UserService.html":{}}}],["v4",{"_index":228,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/HelperService.html":{},"injectables/UserService.html":{}}}],["validationpipe",{"_index":181,"title":{},"body":{"controllers/ArticlesController.html":{},"controllers/UserController.html":{}}}],["validator",{"_index":374,"title":{},"body":{"classes/CommentDto.html":{},"classes/CreateDto.html":{},"classes/FindDto.html":{},"classes/LikeDto.html":{},"classes/LoginDto.html":{},"classes/LogoutDto.html":{},"classes/SignupDto.html":{},"classes/UserExistDto.html":{},"dependencies.html":{}}}],["value",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":733,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":836,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthAutherMiddleware.html":{},"injectables/AuthUserMiddleware.html":{}}}],["watch",{"_index":801,"title":{},"body":{"index.html":{}}}],["went",{"_index":290,"title":{},"body":{"injectables/ArticlesService.html":{},"injectables/UserService.html":{}}}],["world",{"_index":105,"title":{},"body":{"injectables/AppService.html":{}}}],["wrong",{"_index":291,"title":{},"body":{"injectables/ArticlesService.html":{}}}],["wrrong",{"_index":673,"title":{},"body":{"injectables/UserService.html":{}}}],["you'd",{"_index":822,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nArticlesModule\n\nArticlesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nArticlesModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nArticlesService\n\nArticlesService\n\nAppModule -->\n\nArticlesService->AppModule\n\n\n\n\n\nHelperService\n\nHelperService\n\nAppModule -->\n\nHelperService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            ArticlesService\n                        \n                        \n                            HelperService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            UserController\n                        \n                        \n                            ArticlesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ArticlesModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UserController } from './component/user-mangement/user.controller';\nimport { UserService } from './component/user-mangement/user.service';\nimport { UserModule } from './component/user-mangement/user.module';\nimport { ArticlesController } from './component/articles/articles.controller';\nimport { ArticlesService } from './component/articles/articles.service';\nimport { ArticlesModule } from './component/articles/articles.module';\nimport { HelperService } from './config/helper/helper.service';\nimport { AuthAutherMiddleware, AuthUserMiddleware } from './config/auth/auth-user.middleware';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { typeOrmConfig } from './config/database-config/typeOrm.config';\nimport { UserRepositry } from './config/schemas/user/user.repositry';\nimport { DevicesRepositry } from './config/schemas/devices/devices.repositry';\nimport { ArticlesRepositry } from './config/schemas/articles/articles.repositry';\nimport { CommentsRepositry } from './config/schemas/comments/comments.repositry';\nimport { ReplyRepositry } from './config/schemas/reply/reply.repositry';\n\n@Module({\n  imports: [TypeOrmModule.forRoot(typeOrmConfig),\n    TypeOrmModule.forFeature([DevicesRepositry,UserRepositry,ArticlesRepositry,CommentsRepositry,ReplyRepositry]),\n    UserModule, ArticlesModule],\n  controllers: [AppController,UserController, ArticlesController],\n  providers: [AppService, UserService,HelperService, ArticlesService],\n})\nexport class AppModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(AuthUserMiddleware)\n      .forRoutes(\"user/logout\", \"articles/like\",\"articles/comment\");\n\n      consumer\n      .apply(AuthUserMiddleware,AuthAutherMiddleware)\n      .forRoutes(\"articles/create\")\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Articles.html":{"url":"classes/Articles.html","title":"class - Articles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Articles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/schemas/articles/articles.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                articleId\n                            \n                            \n                                autherId\n                            \n                            \n                                body\n                            \n                            \n                                createdAt\n                            \n                            \n                                isActive\n                            \n                            \n                                isDeleted\n                            \n                            \n                                likes\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            articleId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/articles/articles.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autherId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/articles/articles.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/articles/articles.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/articles/articles.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/articles/articles.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/articles/articles.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            likes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/articles/articles.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/articles/articles.entity.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectId } from 'mongoose';\nimport {\n  BaseEntity,\n  CreateDateColumn,\n  JoinColumn,\n  UpdateDateColumn,\n  Column,\n  PrimaryColumn,\n  Entity,\n  OneToMany,\n  ObjectIdColumn,\n} from 'typeorm';\nimport { Comments } from '../comments/comments.entity';\nimport { Users } from '../user/user.entity';\n\n@Entity()\nexport class Articles extends BaseEntity {\n  @PrimaryColumn()\n  articleId: string;\n\n  @Column()\n  // @OneToMany(type => Users, users => users.userId)\n  autherId: string;\n\n  @Column()\n  title: string;\n\n  @Column(\"text\")\n  body: string;\n\n  @Column({type:'int', default: () => 0})\n  likes: number;\n\n  @Column()\n  isActive: boolean;\n\n  @Column()\n  isDeleted: boolean;\n\n  @CreateDateColumn()\n  createdAt: string;\n\n  // @UpdateDateColumn()\n  // updatedAt: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ArticlesController.html":{"url":"controllers/ArticlesController.html","title":"controller - ArticlesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ArticlesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/component/articles/articles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                articles\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                all\n                            \n                            \n                                    Async\n                                comment\n                            \n                            \n                                    Async\n                                like\n                            \n                            \n                                    Async\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            all\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    all(findDto: FindDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/component/articles/articles.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    findDto\n                                    \n                                                FindDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            comment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    comment(req, commentDto: CommentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('comment')@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/component/articles/articles.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    commentDto\n                                    \n                                                CommentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            like\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    like(req, likeDto: LikeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('like')@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/component/articles/articles.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    likeDto\n                                    \n                                                LikeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req, createDto: CreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create')@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/component/articles/articles.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createDto\n                                    \n                                                CreateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Req, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { ArticlesService } from './articles.service';\nimport { CommentDto, CreateDto, FindDto, LikeDto } from './dto/articles.dto';\n\n@Controller('articles')\nexport class ArticlesController {\n    constructor(private articlesService:ArticlesService){\n    }\n    @Post(\"/\")\n    @UsePipes(ValidationPipe)\n    async all(@Body() findDto: FindDto):Promise{\n        return await this.articlesService.getAll(findDto)\n      }\n\n    @Post(\"create\")\n    @UsePipes(ValidationPipe)\n    async logout(@Req() req, @Body() createDto: CreateDto):Promise{\n        return await this.articlesService.createArt(req, createDto)\n      }\n      @Post(\"like\")\n      @UsePipes(ValidationPipe)\n      async like(@Req() req, @Body() likeDto: LikeDto):Promise{\n          return await this.articlesService.like(req, likeDto)\n        }\n      @Post(\"comment\")\n      @UsePipes(ValidationPipe)\n      async comment(@Req() req, @Body() commentDto: CommentDto):Promise{\n          return await this.articlesService.comment(req, commentDto)\n        }\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArticlesModule.html":{"url":"modules/ArticlesModule.html","title":"module - ArticlesModule","body":"\n                   \n\n\n\n\n    Modules\n    ArticlesModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/component/articles/articles.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HelperService } from '../../config/helper/helper.service';\nimport { ArticlesController } from './articles.controller';\nimport { ArticlesService } from './articles.service';\n\n@Module({\n})\nexport class ArticlesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArticlesRepositry.html":{"url":"classes/ArticlesRepositry.html","title":"class - ArticlesRepositry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArticlesRepositry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/schemas/articles/articles.repositry.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Articles } from './articles.entity';\n\n@EntityRepository(Articles)\nexport class ArticlesRepositry extends Repository {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArticlesService.html":{"url":"injectables/ArticlesService.html","title":"injectable - ArticlesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ArticlesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/component/articles/articles.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                comment\n                            \n                            \n                                    Async\n                                createArt\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                like\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(helperService: HelperService, deviceRepositry: DevicesRepositry, userRepositry: UserRepositry, articlesRepositry: ArticlesRepositry, commentsRepositry: CommentsRepositry)\n                    \n                \n                        \n                            \n                                Defined in src/component/articles/articles.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deviceRepositry\n                                                  \n                                                        \n                                                                        DevicesRepositry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepositry\n                                                  \n                                                        \n                                                                        UserRepositry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        articlesRepositry\n                                                  \n                                                        \n                                                                        ArticlesRepositry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commentsRepositry\n                                                  \n                                                        \n                                                                        CommentsRepositry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            comment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    comment(req, commentDto: CommentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/component/articles/articles.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    commentDto\n                                    \n                                                CommentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createArt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createArt(req, createDto: CreateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/component/articles/articles.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createDto\n                                    \n                                                CreateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(findDto: FindDto)\n                \n            \n\n\n            \n                \n                    Defined in src/component/articles/articles.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    findDto\n                                    \n                                                FindDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            like\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    like(req, likeDto: LikeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/component/articles/articles.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    likeDto\n                                    \n                                                LikeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { getConnection, createQueryBuilder } from \"typeorm\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { HelperService } from '../../config/helper/helper.service';\nimport { Articles } from '../../config/schemas/articles/articles.entity';\nimport { ArticlesRepositry } from '../../config/schemas/articles/articles.repositry';\nimport { DevicesRepositry } from '../../config/schemas/devices/devices.repositry';\nimport { UserRepositry } from '../../config/schemas/user/user.repositry';\nimport { CommentDto, CreateDto, FindDto, LikeDto } from './dto/articles.dto';\nimport { Comments } from '../../config/schemas/comments/comments.entity';\nimport { CommentsRepositry } from '../../config/schemas/comments/comments.repositry';\n@Injectable()\nexport class ArticlesService {\n    constructor(private helperService: HelperService,\n        @InjectRepository(DevicesRepositry)\n        private deviceRepositry: DevicesRepositry,\n\n        @InjectRepository(UserRepositry)\n        private userRepositry: UserRepositry,\n\n        @InjectRepository(ArticlesRepositry)\n        private articlesRepositry: ArticlesRepositry,\n\n        @InjectRepository(CommentsRepositry)\n        private commentsRepositry: CommentsRepositry,\n    ) { }\n\n\n    async createArt(req, createDto: CreateDto): Promise {\n        const articleData = new Articles();\n        articleData.articleId = uuidv4();\n        articleData.autherId = req.me.userId;\n        articleData.isActive = true;\n        articleData.isDeleted = false;\n        articleData.title = createDto.title;\n        articleData.body = createDto.body;\n\n        const Article = await this.articlesRepositry.save(articleData);\n\n        if (!Article) {\n            throw new HttpException(\n                'Cannot create article on this time, Please try again later',\n                HttpStatus.BAD_REQUEST,\n            );\n        }\n\n        return new HttpException(\"Success\", HttpStatus.OK);\n    }\n\n    async getAll(findDto: FindDto): Promise {\n        let qery = 'select * ' +\n            'from articles ' +\n            'left join (SELECT ' +\n            'comments.articleId, ' +\n            'COUNT(*) as commentsCount ' +\n            'FROM ' +\n            'comments ' +\n            'GROUP BY comments.articleId) ' +\n            'as commentCount on commentCount.articleId = articles.articleId ' +\n            'where true ';\n        qery += findDto.auther ? 'and autherId = ' + findDto.auther : '';\n        qery += findDto.arcId ? 'and articleId = ' + findDto.arcId : '';\n        qery += findDto.createdAt ? 'and createdAt =' + findDto.createdAt : '';\n        qery += findDto.title ? 'and title LIKE %' + findDto.title + '%' : '';\n        qery += 'ORDER BY articles.createdAt ASC LIMIT 10 OFFSET ' + ((findDto.pageNum * 10) - 10);\n        \n        let article;\n\n        try {\n            article = await getConnection().query(qery);\n        } catch (error) {\n            throw new HttpException(\n                'Something went wrong',\n                HttpStatus.BAD_REQUEST,\n            );\n        }\n        if (!article) {\n            throw new HttpException(\n                'Cannot get article on this time, Please try again later',\n                HttpStatus.BAD_REQUEST,\n            );\n        }\n\n        //---------------------- count -------------------------\n        \n        let qeryCount = 'select Count(*) as total ' +\n            'from articles ' +\n            'where true '\n        findDto.auther ? 'and autherId = ' + findDto.auther : '' +\n            findDto.arcId ? 'and articleId = ' + findDto.arcId : '' +\n                findDto.createdAt ? 'and createdAt =' + findDto.createdAt : '' +\n                    findDto.title ? 'and title LIKE %' + findDto.title + '%' : '' +\n                    'ORDER BY articles.createAt ASC';\n\n        let articleCount ;\n        try {\n            articleCount = await getConnection().query(qeryCount);\n        } catch (error) {\n            throw new HttpException(\n                'Something went wrong',\n                HttpStatus.BAD_REQUEST,\n            );\n        }\n        \n        if (!articleCount[0]) {\n            throw new HttpException(\n                'Cannot create article on this time, Please try again later',\n                HttpStatus.BAD_REQUEST,\n            );\n        }\n\n        return new HttpException({ articles: article, count: articleCount[0].total, pageNum: findDto.pageNum }, HttpStatus.OK);\n    }\n\n    async like(req, likeDto: LikeDto): Promise {\n        const article = await this.articlesRepositry.findOne(likeDto.artId);\n        const articleUpdated = await this.articlesRepositry.update(likeDto.artId, { likes: article.likes + 1 });\n\n        if (articleUpdated.affected != 1)\n            throw new HttpException(\n                'Cannot apply your like,sorry for that Trye again',\n                HttpStatus.BAD_REQUEST,\n            );\n\n        return new HttpException(\"Success\", HttpStatus.OK);\n    }\n    async comment(req, commentDto: CommentDto): Promise {\n        console.log(commentDto.body);\n\n        let commentData = new Comments();\n        commentData.commentId = uuidv4();\n        commentData.articleId = commentDto.artId;\n        commentData.body = commentDto.body;\n        commentData.isActive = true;\n        commentData.isDeleted = false;\n        commentData.userId = req.me.userId;\n\n        const commentValue = await this.commentsRepositry.save(commentData);\n\n        if (!commentValue)\n            throw new HttpException(\n                'Cannot apply your comment,sorry for that Trye again',\n                HttpStatus.BAD_REQUEST,\n            );\n\n        return new HttpException(\"Success\", HttpStatus.OK);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthAutherMiddleware.html":{"url":"classes/AuthAutherMiddleware.html","title":"class - AuthAutherMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthAutherMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/auth/auth-user.middleware.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        NestMiddleware\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: any, res: any, next: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/config/auth/auth-user.middleware.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable, NestMiddleware } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { HelperService } from '../../config/helper/helper.service';\nimport { DevicesRepositry } from '../../config/schemas/devices/devices.repositry';\nimport { UserRepositry } from '../../config/schemas/user/user.repositry';\n\n@Injectable()\nexport class AuthUserMiddleware implements NestMiddleware {\n  constructor(\n    private helperService: HelperService,\n    @InjectRepository(DevicesRepositry)\n    private deviceRepositry: DevicesRepositry,\n    @InjectRepository(UserRepositry)\n    private userRepositry: UserRepositry,\n  ) { }\n\n  async use(req: any, res: any, next: () => void) {\n    const user = await this.userRepositry.findOne({\n      userToken: req.body.token\n    });\n    if (!user)\n      throw new HttpException(\"You don't have authority to access this page.\", HttpStatus.UNAUTHORIZED);\n    const fingerprint = await this.helperService.generateHash(req.body.fingerPrint);\n\n    const data = {\n      fingerPrint: fingerprint,\n      userId: user.userId,\n      token: req.body.token\n    }\n\n    const tokenDecript = await this.helperService.Decrept(data);\n\n    if (!tokenDecript)\n      throw new HttpException(\"You don't have authority to access this page.\", HttpStatus.UNAUTHORIZED);\n\n    req.me = user;\n\n    next();\n  }\n}\nexport class AuthAutherMiddleware implements NestMiddleware {\n  async use(req: any, res: any, next: () => void) {\n    if (req.me.role != \"auther\")\n      throw new HttpException(\"You don't have authority to access this page.\", HttpStatus.UNAUTHORIZED);\n    next();\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                userAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            userAuth\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userAuth()\n                \n            \n\n\n            \n                \n                    Defined in src/config/auth/auth.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {\n    async userAuth() {\n        \n    };\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthUserMiddleware.html":{"url":"injectables/AuthUserMiddleware.html","title":"injectable - AuthUserMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthUserMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/auth/auth-user.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(helperService: HelperService, deviceRepositry: DevicesRepositry, userRepositry: UserRepositry)\n                    \n                \n                        \n                            \n                                Defined in src/config/auth/auth-user.middleware.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deviceRepositry\n                                                  \n                                                        \n                                                                        DevicesRepositry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepositry\n                                                  \n                                                        \n                                                                        UserRepositry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            use\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: any, res: any, next: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/config/auth/auth-user.middleware.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable, NestMiddleware } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { HelperService } from '../../config/helper/helper.service';\nimport { DevicesRepositry } from '../../config/schemas/devices/devices.repositry';\nimport { UserRepositry } from '../../config/schemas/user/user.repositry';\n\n@Injectable()\nexport class AuthUserMiddleware implements NestMiddleware {\n  constructor(\n    private helperService: HelperService,\n    @InjectRepository(DevicesRepositry)\n    private deviceRepositry: DevicesRepositry,\n    @InjectRepository(UserRepositry)\n    private userRepositry: UserRepositry,\n  ) { }\n\n  async use(req: any, res: any, next: () => void) {\n    const user = await this.userRepositry.findOne({\n      userToken: req.body.token\n    });\n    if (!user)\n      throw new HttpException(\"You don't have authority to access this page.\", HttpStatus.UNAUTHORIZED);\n    const fingerprint = await this.helperService.generateHash(req.body.fingerPrint);\n\n    const data = {\n      fingerPrint: fingerprint,\n      userId: user.userId,\n      token: req.body.token\n    }\n\n    const tokenDecript = await this.helperService.Decrept(data);\n\n    if (!tokenDecript)\n      throw new HttpException(\"You don't have authority to access this page.\", HttpStatus.UNAUTHORIZED);\n\n    req.me = user;\n\n    next();\n  }\n}\nexport class AuthAutherMiddleware implements NestMiddleware {\n  async use(req: any, res: any, next: () => void) {\n    if (req.me.role != \"auther\")\n      throw new HttpException(\"You don't have authority to access this page.\", HttpStatus.UNAUTHORIZED);\n    next();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommentDto.html":{"url":"classes/CommentDto.html","title":"class - CommentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/component/articles/dto/articles.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                artId\n                            \n                            \n                                body\n                            \n                            \n                                fingerPrint\n                            \n                            \n                                token\n                            \n                            \n                                uHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            artId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/articles/dto/articles.dto.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/articles/dto/articles.dto.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fingerPrint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/articles/dto/articles.dto.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/articles/dto/articles.dto.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/articles/dto/articles.dto.ts:68\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from \"class-validator\";\n\nexport class CreateDto {\n    @IsNotEmpty()\n    @IsString()\n    token: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n    \n    @IsNotEmpty()\n    @IsString()\n    title: string;\n\n    @IsNotEmpty()\n    @IsString()\n    body: string;\n}\n\nexport class FindDto {\n\n    @IsOptional()\n    @IsString()\n    title: string;\n\n    @IsOptional()\n    @IsString()\n    arcId: string;\n\n    @IsOptional()\n    @IsString()\n    auther: string;\n\n    @IsOptional()\n    @IsString()\n    createdAt: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    pageNum: number;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n}\n\n\nexport class CommentDto{\n    @IsNotEmpty()\n    @IsString()\n    token: string;\n    \n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n    \n    @IsNotEmpty()\n    @IsString()\n    artId: string;\n\n    @IsNotEmpty()\n    @IsString()\n    body: string;\n}\n\n\nexport class LikeDto{\n    @IsNotEmpty()\n    @IsString()\n    token: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n\n\n    @IsNotEmpty()\n    @IsString()\n    artId: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Comments.html":{"url":"classes/Comments.html","title":"class - Comments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Comments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/schemas/comments/comments.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                articleId\n                            \n                            \n                                body\n                            \n                            \n                                commentId\n                            \n                            \n                                createdAt\n                            \n                            \n                                isActive\n                            \n                            \n                                isDeleted\n                            \n                            \n                                likes\n                            \n                            \n                                updatedAt\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            articleId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/comments/comments.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column('text')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/comments/comments.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            commentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/comments/comments.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/comments/comments.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/comments/comments.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/comments/comments.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            likes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/comments/comments.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/comments/comments.entity.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/comments/comments.entity.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectId } from 'mongoose';\nimport {\n  BaseEntity,\n  CreateDateColumn,\n  UpdateDateColumn,\n  Column,\n  JoinColumn,\n  ManyToOne,\n  PrimaryColumn,\n  Entity,\n  ObjectIdColumn,\n} from 'typeorm';\nimport { Articles } from '../articles/articles.entity';\nimport { Users } from '../user/user.entity';\n\n@Entity()\nexport class Comments extends BaseEntity {\n  @PrimaryColumn()\n  commentId: string;\n\n  @Column()\n  articleId: string;\n\n  @Column()\n  userId: string;\n\n  @Column(\"text\")\n  body: string;\n\n  @Column({type:'int', default: () => 0})\n  likes: number;\n\n  @Column()\n  isActive: boolean;\n\n  @Column()\n  isDeleted: boolean;\n\n  @CreateDateColumn()\n  createdAt: string;\n\n  @UpdateDateColumn()\n  updatedAt: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommentsRepositry.html":{"url":"classes/CommentsRepositry.html","title":"class - CommentsRepositry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommentsRepositry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/schemas/comments/comments.repositry.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Comments } from './comments.entity';\n\n@EntityRepository(Comments)\nexport class CommentsRepositry extends Repository {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDto.html":{"url":"classes/CreateDto.html","title":"class - CreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/component/articles/dto/articles.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                fingerPrint\n                            \n                            \n                                title\n                            \n                            \n                                token\n                            \n                            \n                                uHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/articles/dto/articles.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fingerPrint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/articles/dto/articles.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/articles/dto/articles.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/articles/dto/articles.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/articles/dto/articles.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from \"class-validator\";\n\nexport class CreateDto {\n    @IsNotEmpty()\n    @IsString()\n    token: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n    \n    @IsNotEmpty()\n    @IsString()\n    title: string;\n\n    @IsNotEmpty()\n    @IsString()\n    body: string;\n}\n\nexport class FindDto {\n\n    @IsOptional()\n    @IsString()\n    title: string;\n\n    @IsOptional()\n    @IsString()\n    arcId: string;\n\n    @IsOptional()\n    @IsString()\n    auther: string;\n\n    @IsOptional()\n    @IsString()\n    createdAt: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    pageNum: number;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n}\n\n\nexport class CommentDto{\n    @IsNotEmpty()\n    @IsString()\n    token: string;\n    \n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n    \n    @IsNotEmpty()\n    @IsString()\n    artId: string;\n\n    @IsNotEmpty()\n    @IsString()\n    body: string;\n}\n\n\nexport class LikeDto{\n    @IsNotEmpty()\n    @IsString()\n    token: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n\n\n    @IsNotEmpty()\n    @IsString()\n    artId: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Devices.html":{"url":"classes/Devices.html","title":"class - Devices","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Devices\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/schemas/devices/devices.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                detail\n                            \n                            \n                                deviceId\n                            \n                            \n                                isActive\n                            \n                            \n                                isBlocked\n                            \n                            \n                                isDeleted\n                            \n                            \n                                updatedAt\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/devices/devices.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/devices/devices.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deviceId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/devices/devices.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/devices/devices.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBlocked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/devices/devices.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/devices/devices.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/devices/devices.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/devices/devices.entity.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectId } from 'mongoose';\nimport {\n  BaseEntity,\n  CreateDateColumn,\n  UpdateDateColumn,\n  Column,\n  PrimaryColumn,\n  Entity,\n  ObjectIdColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Devices extends BaseEntity {\n  @PrimaryColumn()\n  deviceId: string;\n\n  @Column()\n  userId: string;\n\n  @Column()\n  detail: string;\n\n  @Column()\n  isActive: boolean;\n\n  @Column()\n  isDeleted: boolean;\n\n  @Column()\n  isBlocked: boolean;\n\n  @CreateDateColumn()\n  createdAt: string;\n\n  @UpdateDateColumn()\n  updatedAt: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DevicesRepositry.html":{"url":"classes/DevicesRepositry.html","title":"class - DevicesRepositry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DevicesRepositry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/schemas/devices/devices.repositry.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Devices } from './devices.entity';\n\n@EntityRepository(Devices)\nexport class DevicesRepositry extends Repository {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindDto.html":{"url":"classes/FindDto.html","title":"class - FindDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/component/articles/dto/articles.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                arcId\n                            \n                            \n                                auther\n                            \n                            \n                                createdAt\n                            \n                            \n                                fingerPrint\n                            \n                            \n                                pageNum\n                            \n                            \n                                title\n                            \n                            \n                                uHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arcId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/articles/dto/articles.dto.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            auther\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/articles/dto/articles.dto.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/articles/dto/articles.dto.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fingerPrint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/articles/dto/articles.dto.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageNum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/articles/dto/articles.dto.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/articles/dto/articles.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/articles/dto/articles.dto.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from \"class-validator\";\n\nexport class CreateDto {\n    @IsNotEmpty()\n    @IsString()\n    token: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n    \n    @IsNotEmpty()\n    @IsString()\n    title: string;\n\n    @IsNotEmpty()\n    @IsString()\n    body: string;\n}\n\nexport class FindDto {\n\n    @IsOptional()\n    @IsString()\n    title: string;\n\n    @IsOptional()\n    @IsString()\n    arcId: string;\n\n    @IsOptional()\n    @IsString()\n    auther: string;\n\n    @IsOptional()\n    @IsString()\n    createdAt: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    pageNum: number;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n}\n\n\nexport class CommentDto{\n    @IsNotEmpty()\n    @IsString()\n    token: string;\n    \n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n    \n    @IsNotEmpty()\n    @IsString()\n    artId: string;\n\n    @IsNotEmpty()\n    @IsString()\n    body: string;\n}\n\n\nexport class LikeDto{\n    @IsNotEmpty()\n    @IsString()\n    token: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n\n\n    @IsNotEmpty()\n    @IsString()\n    artId: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HelperService.html":{"url":"injectables/HelperService.html","title":"injectable - HelperService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HelperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/helper/helper.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearUser\n                            \n                            \n                                    Async\n                                CriptoData\n                            \n                            \n                                    Async\n                                Decrept\n                            \n                            \n                                    Async\n                                generateHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clearUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearUser(data)\n                \n            \n\n\n            \n                \n                    Defined in src/config/helper/helper.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            CriptoData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    CriptoData(data)\n                \n            \n\n\n            \n                \n                    Defined in src/config/helper/helper.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            Decrept\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    Decrept(data)\n                \n            \n\n\n            \n                \n                    Defined in src/config/helper/helper.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateHash\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateHash(data)\n                \n            \n\n\n            \n                \n                    Defined in src/config/helper/helper.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nconst { v4: uuid } = require('uuid');\nconst crypto = require('crypto');\nimport { createCipheriv, createDecipheriv, randomBytes, scrypt } from 'crypto';\nimport { promisify } from 'util';\nconst Key = \"36d851f4-3e68-4919-b6f9-24d335b8761e\";\n\n\n// const iv = randomBytes(16);\nconst iv = '9e313bae8ffb4bcfaffb3f6a8a5592c1';\nrequire('dotenv').config();\n@Injectable()\nexport class HelperService {\n    async generateHash(data) {\n        const key = crypto.scryptSync(Key, 'salt', 16);\n        const hash = crypto.createHash('sha256', key);\n        hash.update(data);\n        let hashedData = hash.digest('hex');\n        return hashedData;\n    };\n\n\n    async CriptoData(data) {\n        const key = (await promisify(scrypt)(data.fingerPrint + \"\" + data.userId + \"\" + Key, 'salt', 32)) as Buffer;\n        const cipher = createCipheriv('aes-256-ctr', key, Buffer.from(iv, 'hex'));\n        let input = JSON.stringify(data)\n        const encryptedText = Buffer.concat([\n            cipher.update(input),\n            cipher.final(),\n        ]);\n        return encryptedText.toString(\"base64\");\n    };\n\n    async Decrept(data) {\n        let token =  Buffer.from(data.token, 'base64');\n        const key = (await promisify(scrypt)(data.fingerPrint + \"\" + data.userId + \"\" + Key, 'salt', 32)) as Buffer;\n        const decipher = createDecipheriv(\n            'aes-256-ctr',\n            key,\n            Buffer.from(iv, 'hex'));\n\n        const decrpyted = Buffer.concat([\n            decipher.update(Buffer.from(token)),\n            decipher.final()\n        ]);\n        try {\n            return JSON.parse(decrpyted.toString('utf8'));\n        } catch (error) {\n            return false;\n        }\n    }\n\n    async clearUser(data) {\n        const keys = [\"password\",\"userToken\",\"oldPassword\",\"createdAt\",\"updatedAt\"]\n        for(let i in keys){\n            delete data[keys[i]]\n        }\n        return data;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LikeDto.html":{"url":"classes/LikeDto.html","title":"class - LikeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LikeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/component/articles/dto/articles.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                artId\n                            \n                            \n                                fingerPrint\n                            \n                            \n                                token\n                            \n                            \n                                uHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            artId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/articles/dto/articles.dto.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fingerPrint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/articles/dto/articles.dto.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/articles/dto/articles.dto.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/articles/dto/articles.dto.ts:91\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from \"class-validator\";\n\nexport class CreateDto {\n    @IsNotEmpty()\n    @IsString()\n    token: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n    \n    @IsNotEmpty()\n    @IsString()\n    title: string;\n\n    @IsNotEmpty()\n    @IsString()\n    body: string;\n}\n\nexport class FindDto {\n\n    @IsOptional()\n    @IsString()\n    title: string;\n\n    @IsOptional()\n    @IsString()\n    arcId: string;\n\n    @IsOptional()\n    @IsString()\n    auther: string;\n\n    @IsOptional()\n    @IsString()\n    createdAt: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    pageNum: number;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n}\n\n\nexport class CommentDto{\n    @IsNotEmpty()\n    @IsString()\n    token: string;\n    \n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n    \n    @IsNotEmpty()\n    @IsString()\n    artId: string;\n\n    @IsNotEmpty()\n    @IsString()\n    body: string;\n}\n\n\nexport class LikeDto{\n    @IsNotEmpty()\n    @IsString()\n    token: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n\n\n    @IsNotEmpty()\n    @IsString()\n    artId: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/component/user-mangement/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                countryCode\n                            \n                            \n                                fingerPrint\n                            \n                            \n                                mobileNum\n                            \n                            \n                                password\n                            \n                            \n                                uHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            countryCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/user-mangement/dto/user.dto.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fingerPrint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/user-mangement/dto/user.dto.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mobileNum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/user-mangement/dto/user.dto.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/user-mangement/dto/user.dto.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/user-mangement/dto/user.dto.ts:82\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsString } from \"class-validator\";\n\nexport class SignupDto {\n    @IsNotEmpty()\n    @IsString()\n    username: string;\n\n    @IsNotEmpty()\n    @IsString()\n    password: string;\n\n    @IsNotEmpty()\n    @IsString()\n    mobileNum: string;\n\n    @IsNotEmpty()\n    @IsString()\n    country: string;\n\n\n    @IsNotEmpty()\n    @IsString()\n    countryCode: string;\n\n    @IsNotEmpty()\n    @IsString()\n    role: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n\n}\n\n\n\nexport class UserExistDto {\n    @IsNotEmpty()\n    @IsString()\n    mobileNum: string;\n\n\n    @IsNotEmpty()\n    @IsString()\n    countryCode: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n}\n\n\nexport class LoginDto{\n    @IsNotEmpty()\n    @IsString()\n    mobileNum: string;\n\n\n    @IsNotEmpty()\n    @IsString()\n    countryCode: string;\n\n    @IsNotEmpty()\n    @IsString()\n    password: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n}\n\n\nexport class LogoutDto{\n    @IsNotEmpty()\n    @IsString()\n    token: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogoutDto.html":{"url":"classes/LogoutDto.html","title":"class - LogoutDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogoutDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/component/user-mangement/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fingerPrint\n                            \n                            \n                                token\n                            \n                            \n                                uHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fingerPrint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/user-mangement/dto/user.dto.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/user-mangement/dto/user.dto.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/user-mangement/dto/user.dto.ts:97\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsString } from \"class-validator\";\n\nexport class SignupDto {\n    @IsNotEmpty()\n    @IsString()\n    username: string;\n\n    @IsNotEmpty()\n    @IsString()\n    password: string;\n\n    @IsNotEmpty()\n    @IsString()\n    mobileNum: string;\n\n    @IsNotEmpty()\n    @IsString()\n    country: string;\n\n\n    @IsNotEmpty()\n    @IsString()\n    countryCode: string;\n\n    @IsNotEmpty()\n    @IsString()\n    role: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n\n}\n\n\n\nexport class UserExistDto {\n    @IsNotEmpty()\n    @IsString()\n    mobileNum: string;\n\n\n    @IsNotEmpty()\n    @IsString()\n    countryCode: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n}\n\n\nexport class LoginDto{\n    @IsNotEmpty()\n    @IsString()\n    mobileNum: string;\n\n\n    @IsNotEmpty()\n    @IsString()\n    countryCode: string;\n\n    @IsNotEmpty()\n    @IsString()\n    password: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n}\n\n\nexport class LogoutDto{\n    @IsNotEmpty()\n    @IsString()\n    token: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reply.html":{"url":"classes/Reply.html","title":"class - Reply","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reply\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/schemas/reply/reply.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                artId\n                            \n                            \n                                body\n                            \n                            \n                                commentId\n                            \n                            \n                                createdAt\n                            \n                            \n                                isActive\n                            \n                            \n                                isDeleted\n                            \n                            \n                                likes\n                            \n                            \n                                replyId\n                            \n                            \n                                updatedAt\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            artId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/reply/reply.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/reply/reply.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            commentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/reply/reply.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/reply/reply.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/reply/reply.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/reply/reply.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            likes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/reply/reply.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            replyId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/reply/reply.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/reply/reply.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/reply/reply.entity.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  CreateDateColumn,\n  UpdateDateColumn,\n  Column,\n  PrimaryColumn,\n  Entity,\n} from 'typeorm';\n\n@Entity()\nexport class Reply extends BaseEntity {\n  @PrimaryColumn()\n  replyId: string;\n\n  @Column()\n  commentId: string;\n\n  @Column()\n  artId: string;\n\n  @Column()\n  userId: string;\n\n  @Column()\n  body: string;\n\n  @Column()\n  likes: number;\n\n  @Column()\n  isActive: boolean;\n\n  @Column()\n  isDeleted: boolean;\n\n  @CreateDateColumn()\n  createdAt: string;\n\n  @UpdateDateColumn()\n  updatedAt: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReplyRepositry.html":{"url":"classes/ReplyRepositry.html","title":"class - ReplyRepositry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReplyRepositry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/schemas/reply/reply.repositry.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { Reply } from './reply.entity';\n\n@EntityRepository(Reply)\nexport class ReplyRepositry extends Repository {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignupDto.html":{"url":"classes/SignupDto.html","title":"class - SignupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/component/user-mangement/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                country\n                            \n                            \n                                countryCode\n                            \n                            \n                                fingerPrint\n                            \n                            \n                                mobileNum\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                uHeader\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/user-mangement/dto/user.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            countryCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/user-mangement/dto/user.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fingerPrint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/user-mangement/dto/user.dto.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mobileNum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/user-mangement/dto/user.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/user-mangement/dto/user.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/user-mangement/dto/user.dto.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/user-mangement/dto/user.dto.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/user-mangement/dto/user.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsString } from \"class-validator\";\n\nexport class SignupDto {\n    @IsNotEmpty()\n    @IsString()\n    username: string;\n\n    @IsNotEmpty()\n    @IsString()\n    password: string;\n\n    @IsNotEmpty()\n    @IsString()\n    mobileNum: string;\n\n    @IsNotEmpty()\n    @IsString()\n    country: string;\n\n\n    @IsNotEmpty()\n    @IsString()\n    countryCode: string;\n\n    @IsNotEmpty()\n    @IsString()\n    role: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n\n}\n\n\n\nexport class UserExistDto {\n    @IsNotEmpty()\n    @IsString()\n    mobileNum: string;\n\n\n    @IsNotEmpty()\n    @IsString()\n    countryCode: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n}\n\n\nexport class LoginDto{\n    @IsNotEmpty()\n    @IsString()\n    mobileNum: string;\n\n\n    @IsNotEmpty()\n    @IsString()\n    countryCode: string;\n\n    @IsNotEmpty()\n    @IsString()\n    password: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n}\n\n\nexport class LogoutDto{\n    @IsNotEmpty()\n    @IsString()\n    token: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/component/user-mangement/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                signup\n                            \n                            \n                                    Async\n                                userExist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(logindto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/login')@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/component/user-mangement/user.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logindto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req, logoutdto: LogoutDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/logout')@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/component/user-mangement/user.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    logoutdto\n                                    \n                                                LogoutDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            signup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(signupdto: SignupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signup')@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/component/user-mangement/user.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signupdto\n                                    \n                                                SignupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            userExist\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userExist(signupdto: UserExistDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/exist')@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/component/user-mangement/user.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signupdto\n                                    \n                                                UserExistDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, Req, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { LoginDto, LogoutDto, SignupDto, UserExistDto } from './dto/user.dto';\nimport { UserService } from './user.service';\n\n@Controller('user')\nexport class UserController {\n    constructor(private userService:UserService){\n    }\n    @Post(\"/signup\")\n    @UsePipes(ValidationPipe)\n    async signup(@Body() signupdto: SignupDto): Promise {\n      return await this.userService.signup(signupdto)\n    }\n\n    @Post('/exist')\n    @UsePipes(ValidationPipe)\n    async userExist(@Body() signupdto: UserExistDto): Promise {\n      return await this.userService.userExist(signupdto)\n    }\n\n    @Post(\"/login\")\n    @UsePipes(ValidationPipe)\n    async login(@Body() logindto: LoginDto):Promise{\n        return await this.userService.login(logindto)\n      }\n\n    @Post(\"/logout\")\n    @UsePipes(ValidationPipe)\n    async logout(@Req() req, @Body() logoutdto: LogoutDto):Promise{\n        return await this.userService.logout(req, logoutdto)\n      }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserExistDto.html":{"url":"classes/UserExistDto.html","title":"class - UserExistDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserExistDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/component/user-mangement/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                countryCode\n                            \n                            \n                                fingerPrint\n                            \n                            \n                                mobileNum\n                            \n                            \n                                uHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            countryCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/user-mangement/dto/user.dto.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fingerPrint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/user-mangement/dto/user.dto.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mobileNum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/user-mangement/dto/user.dto.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/component/user-mangement/dto/user.dto.ts:58\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsString } from \"class-validator\";\n\nexport class SignupDto {\n    @IsNotEmpty()\n    @IsString()\n    username: string;\n\n    @IsNotEmpty()\n    @IsString()\n    password: string;\n\n    @IsNotEmpty()\n    @IsString()\n    mobileNum: string;\n\n    @IsNotEmpty()\n    @IsString()\n    country: string;\n\n\n    @IsNotEmpty()\n    @IsString()\n    countryCode: string;\n\n    @IsNotEmpty()\n    @IsString()\n    role: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n\n}\n\n\n\nexport class UserExistDto {\n    @IsNotEmpty()\n    @IsString()\n    mobileNum: string;\n\n\n    @IsNotEmpty()\n    @IsString()\n    countryCode: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n}\n\n\nexport class LoginDto{\n    @IsNotEmpty()\n    @IsString()\n    mobileNum: string;\n\n\n    @IsNotEmpty()\n    @IsString()\n    countryCode: string;\n\n    @IsNotEmpty()\n    @IsString()\n    password: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n}\n\n\nexport class LogoutDto{\n    @IsNotEmpty()\n    @IsString()\n    token: string;\n\n    @IsNotEmpty()\n    @IsString()\n    fingerPrint: string;\n\n    @IsNotEmpty()\n    @IsString()\n    uHeader: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/component/user-mangement/user.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HelperService } from '../../config/helper/helper.service';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\n\n@Module({})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRepositry.html":{"url":"classes/UserRepositry.html","title":"class - UserRepositry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepositry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/schemas/user/user.repositry.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from \"typeorm\";\nimport { Users } from \"./user.entity\";\n\n@EntityRepository(Users)\nexport class UserRepositry extends Repository{\n    \n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/component/user-mangement/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                signup\n                            \n                            \n                                    Async\n                                userExist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(helperService: HelperService, deviceRepositry: DevicesRepositry, userRepositry: UserRepositry)\n                    \n                \n                        \n                            \n                                Defined in src/component/user-mangement/user.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        deviceRepositry\n                                                  \n                                                        \n                                                                        DevicesRepositry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepositry\n                                                  \n                                                        \n                                                                        UserRepositry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(logindto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/component/user-mangement/user.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logindto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(req, logoutDto: LogoutDto)\n                \n            \n\n\n            \n                \n                    Defined in src/component/user-mangement/user.service.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    logoutDto\n                                    \n                                                LogoutDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            signup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(signupdto: SignupDto)\n                \n            \n\n\n            \n                \n                    Defined in src/component/user-mangement/user.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signupdto\n                                    \n                                                SignupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            userExist\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userExist(userExistDto: UserExistDto)\n                \n            \n\n\n            \n                \n                    Defined in src/component/user-mangement/user.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userExistDto\n                                    \n                                                UserExistDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { v4 as uuidv4 } from 'uuid';\nimport { HelperService } from '../../config/helper/helper.service';\nimport { Devices } from '../../config/schemas/devices/devices.entity';\nimport { DevicesRepositry } from '../../config/schemas/devices/devices.repositry';\nimport { UserRepositry } from '../../config/schemas/user/user.repositry';\nimport { LoginDto, LogoutDto, SignupDto, UserExistDto } from './dto/user.dto';\nimport { Users } from '../../config/schemas/user/user.entity';\n\n@Injectable()\nexport class UserService {\n    constructor(private helperService: HelperService,\n        @InjectRepository(DevicesRepositry)\n        private deviceRepositry: DevicesRepositry,\n        @InjectRepository(UserRepositry)\n        private userRepositry: UserRepositry,\n    ) { }\n\n    async userExist(userExistDto: UserExistDto): Promise {\n        const user = await this.userRepositry.findOne({\n          countryCode: userExistDto.countryCode,\n          mobileNumber: userExistDto.mobileNum,\n        });\n        return new HttpException(\n            {exist:!!user},\n            HttpStatus.OK,\n        );\n      }\n\n    async signup(signupdto: SignupDto): Promise {\n        let Password = await this.helperService.generateHash(\n            signupdto.password,\n        );\n        \n        const user = await this.userRepositry.findOne({\n            mobileNumber: signupdto.mobileNum,\n        });\n        if (user) {\n            throw new HttpException(\n                'this mobile number alredy have an account',\n                HttpStatus.BAD_REQUEST,\n            );\n        }\n\n        const userId: string = uuidv4();\n        const deviceToken: string = uuidv4();\n        let fingerprint = await this.helperService.generateHash(signupdto.fingerPrint);\n        const userToken = await this.helperService.CriptoData({\n            userId: userId,\n            date: new Date(),\n            fingerPrint: fingerprint,\n        });\n        const userData = new Users();\n        userData.username = signupdto.username;\n        userData.password = Password;\n        userData.userId = userId;\n        userData.firstName = \"\";\n        userData.lastName = \"\";\n        userData.image = \"\";\n        userData.country = signupdto.country;\n        userData.mobileNumber = signupdto.mobileNum;\n        userData.countryCode = signupdto.countryCode;\n        userData.address = \"\";\n        userData.location = \"\";\n        userData.role = signupdto.role;\n        userData.gender = \"\";\n        userData.pirthDate = \"\";\n        userData.email = \"\";\n        userData.emailVirefy = false;\n        userData.mobileViryfy = false;\n        userData.isActive = false;\n        userData.isDeleted = false;\n        userData.isLogin = true;\n        userData.isBlocked = false;\n        userData.userToken = userToken;\n        // userData.oldPassword = '{}';\n\n\n        const deviceData = new Devices();\n        deviceData.deviceId = fingerprint\n        deviceData.userId = userId;\n        deviceData.detail = signupdto.uHeader;\n        deviceData.isActive = true;\n        deviceData.isDeleted = false;\n        deviceData.isBlocked = false;\n\n\n        const userRes = await this.userRepositry.save(userData);\n        if (!userRes) {\n            throw new HttpException(\n                'Error in create user',\n                HttpStatus.BAD_REQUEST,\n            );\n        }\n\n        const deviceRes = await this.deviceRepositry.save(deviceData);\n\n        if (!deviceRes) {\n            throw new HttpException(\n                'Cannot recognized this Device',\n                HttpStatus.BAD_REQUEST,\n            );\n        }\n\n        return new HttpException({ token: userRes.userToken }, HttpStatus.OK);\n    }\n\n    async login(logindto: LoginDto): Promise {\n        // hashing the input password ----------------------\n        let Password = await this.helperService.generateHash(\n            logindto.password,\n        );\n\n        // get user information for input monbile number --------\n        const user = await this.userRepositry.findOne({\n            mobileNumber: logindto.mobileNum,\n            countryCode: logindto.countryCode\n        });\n\n        // check if user is exist --------------------------------\n        if (!user) {\n            throw new HttpException(\n                'this mobile number not foud, please signup first',\n                HttpStatus.BAD_REQUEST,\n            );\n        }\n\n        const fingerPrint = await this.helperService.generateHash(logindto.fingerPrint);\n\n        // check if from same device ------------------------------\n        const deviceRes = await this.deviceRepositry.findOne({ userId: user.userId, deviceId: fingerPrint });\n\n        let activeDevice = false;\n        if (deviceRes) {\n            activeDevice = deviceRes.isActive;\n        }\n        // if user aleary login and enter same password and from same device  -----\n        if (user.isLogin && user.password == Password && activeDevice) {\n            throw new HttpException({\n                message: 'You are already loged in', token: user.userToken\n            },\n                HttpStatus.OK,\n            );\n        }\n\n\n        const userToken = await this.helperService.CriptoData({\n            userId: user.userId,\n            date: new Date(),\n            fingerPrint: fingerPrint,\n        },\n        );\n\n        const deviceData = new Devices();\n        deviceData.deviceId = fingerPrint\n        deviceData.userId = user.userId;\n        deviceData.detail = logindto.uHeader;\n        deviceData.isActive = true;\n        deviceData.isDeleted = false;\n        deviceData.isBlocked = false;\n        user.userToken = userToken\n        const userUpdates = await this.userRepositry.save(user);\n        if (!userUpdates) {\n            throw new HttpException('Somthing went wrrong, Please try again',\n                HttpStatus.BAD_REQUEST,\n            );\n        }\n\n        let deviceUpdates: any;\n\n        if (deviceRes && !activeDevice) {\n            deviceUpdates = await this.deviceRepositry.update({ deviceId: deviceRes.deviceId }, { isActive: true });\n        } else {\n            deviceUpdates = await this.deviceRepositry.save(deviceData);\n        }\n\n        return new HttpException({ token: userUpdates.userToken }, HttpStatus.OK);\n    }\n\n\n    async logout(req, logoutDto: LogoutDto): Promise {\n        const userToken = await this.helperService.CriptoData({\n            userId: req.me.userId,\n            date: new Date(),\n            fingerPrint: req.me.fingerprint,\n        });\n        const userRes = await this.userRepositry.update({\n            userId: req.me.userId\n        }, {\n            isLogin: false,\n            userToken: userToken\n        });\n\n        return new HttpException(\"Success\", HttpStatus.OK);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Users.html":{"url":"classes/Users.html","title":"class - Users","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Users\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/schemas/user/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                country\n                            \n                            \n                                countryCode\n                            \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                emailVirefy\n                            \n                            \n                                firstName\n                            \n                            \n                                gender\n                            \n                            \n                                image\n                            \n                            \n                                isActive\n                            \n                            \n                                isBlocked\n                            \n                            \n                                isDeleted\n                            \n                            \n                                isLogin\n                            \n                            \n                                lastName\n                            \n                            \n                                location\n                            \n                            \n                                mobileNumber\n                            \n                            \n                                mobileViryfy\n                            \n                            \n                                password\n                            \n                            \n                                pirthDate\n                            \n                            \n                                role\n                            \n                            \n                                updatedAt\n                            \n                            \n                                userId\n                            \n                            \n                                username\n                            \n                            \n                                userToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            countryCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailVirefy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'boolean', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBlocked\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'boolean', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'boolean', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mobileNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mobileViryfy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'boolean', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pirthDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/config/schemas/user/user.entity.ts:79\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectId } from 'mongoose';\nimport {\n  Entity,\n  Column,\n  PrimaryColumn,\n  PrimaryGeneratedColumn,\n  BaseEntity,\n  ObjectIdColumn,\n  CreateDateColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Users extends BaseEntity {  \n  @PrimaryColumn()\n  userId: string;\n\n  @Column()\n  username: string;\n\n  @Column()\n  password: string;\n\n  @Column({ nullable: true})\n  firstName: string;\n\n  @Column({ nullable: true})\n  lastName: string;\n\n  @Column({ nullable: true})\n  image: string;\n\n  @Column()\n  country: string;\n\n  @Column()\n  mobileNumber: string;\n\n  @Column()\n  countryCode: string;\n\n  @Column({ nullable: true})\n  address: string;\n\n  @Column({ nullable: true})\n  location: string;\n\n  @Column()\n  role: string;\n\n  @Column({ nullable: true})\n  gender: string;\n\n  @Column({ nullable: true})\n  pirthDate: string;\n\n  @Column({ nullable: true})\n  email: string;\n\n  @Column({ nullable: true})\n  emailVirefy: boolean;\n\n  @Column({type:'boolean', default: () => false})\n  mobileViryfy: boolean;\n\n  @Column({type:'boolean', default: () => false})\n  isActive: boolean;\n\n  @Column({type:'boolean', default: () => false})\n  isDeleted: boolean;\n\n  @Column()\n  isLogin: boolean;\n\n  @Column({type:'boolean', default: () => false})\n  isBlocked: boolean;\n\n  @Column()\n  userToken: string;\n\n  \n  @CreateDateColumn()\n  createdAt: string;\n\n  @UpdateDateColumn()\n  updatedAt: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/component/articles/articles.controller.ts\n            \n            controller\n            ArticlesController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/component/articles/articles.service.ts\n            \n            injectable\n            ArticlesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/component/articles/dto/articles.dto.ts\n            \n            class\n            CommentDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/component/articles/dto/articles.dto.ts\n            \n            class\n            CreateDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/component/articles/dto/articles.dto.ts\n            \n            class\n            FindDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/component/articles/dto/articles.dto.ts\n            \n            class\n            LikeDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/component/user-mangement/dto/user.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/component/user-mangement/dto/user.dto.ts\n            \n            class\n            LogoutDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/component/user-mangement/dto/user.dto.ts\n            \n            class\n            SignupDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/component/user-mangement/dto/user.dto.ts\n            \n            class\n            UserExistDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/component/user-mangement/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/component/user-mangement/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/config/auth/auth-user.middleware.ts\n            \n            class\n            AuthAutherMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/auth/auth-user.middleware.ts\n            \n            injectable\n            AuthUserMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/database-config/typeOrm.config.ts\n            \n            variable\n            __entityPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/database-config/typeOrm.config.ts\n            \n            variable\n            typeOrmConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/helper/helper.service.ts\n            \n            injectable\n            HelperService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/config/helper/helper.service.ts\n            \n            variable\n            crypto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/helper/helper.service.ts\n            \n            variable\n            iv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/helper/helper.service.ts\n            \n            variable\n            Key\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/helper/helper.service.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/schemas/articles/articles.entity.ts\n            \n            class\n            Articles\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/config/schemas/articles/articles.repositry.ts\n            \n            class\n            ArticlesRepositry\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/schemas/articles/articles.schema.ts\n            \n            variable\n            AriticlesSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/schemas/comments/comments.entity.ts\n            \n            class\n            Comments\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/config/schemas/comments/comments.repositry.ts\n            \n            class\n            CommentsRepositry\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/schemas/comments/comments.schema.ts\n            \n            variable\n            CommentsSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/schemas/devices/devices.entity.ts\n            \n            class\n            Devices\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/config/schemas/devices/devices.repositry.ts\n            \n            class\n            DevicesRepositry\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/schemas/devices/devices.schema.ts\n            \n            variable\n            DeviceSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/schemas/reply/reply.entity.ts\n            \n            class\n            Reply\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/config/schemas/reply/reply.repositry.ts\n            \n            class\n            ReplyRepositry\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/schemas/reply/reply.schema.ts\n            \n            variable\n            ReplySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/schemas/user/user.entity.ts\n            \n            class\n            Users\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/config/schemas/user/user.repositry.ts\n            \n            class\n            UserRepositry\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/schemas/user/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/mongoose : ^7.2.3\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/platform-fastify : ^7.6.12\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            mongoose : ^5.11.16\n        \n            mysql : ^2.18.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            typeorm : ^0.2.31\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArticlesModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nArticlesModule\n\nArticlesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nArticlesModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nArticlesService\n\nArticlesService\n\nAppModule -->\n\nArticlesService->AppModule\n\n\n\n\n\nHelperService\n\nHelperService\n\nAppModule -->\n\nHelperService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    19 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            __entityPath   (src/.../typeOrm.config.ts)\n                        \n                        \n                            AriticlesSchema   (src/.../articles.schema.ts)\n                        \n                        \n                            CommentsSchema   (src/.../comments.schema.ts)\n                        \n                        \n                            crypto   (src/.../helper.service.ts)\n                        \n                        \n                            DeviceSchema   (src/.../devices.schema.ts)\n                        \n                        \n                            iv   (src/.../helper.service.ts)\n                        \n                        \n                            Key   (src/.../helper.service.ts)\n                        \n                        \n                            ReplySchema   (src/.../reply.schema.ts)\n                        \n                        \n                            typeOrmConfig   (src/.../typeOrm.config.ts)\n                        \n                        \n                               (src/.../helper.service.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/database-config/typeOrm.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            __entityPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : __dirname+'/../schemas/'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeOrmConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TypeOrmModuleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  type: 'mysql',\n  host: 'hwr4wkxs079mtb19.cbetxkdyhwsb.us-east-1.rds.amazonaws.com',\n  port: 3306,\n  username: 'b8hhress572gjlgd',\n  password: 'l2ic0togfhmgarvy',\n  database: 'f9mgfal6udhmdsoq',\n  entities: [\n    __entityPath + 'user/user.entity.js',\n    __entityPath + 'devices/devices.entity.js',\n    __entityPath + 'articles/articles.entity.js',\n    __entityPath + 'comments/comments.entity.js',\n    __entityPath + 'reply/reply.entity.js',\n  ],\n  synchronize: true,\n}\n                        \n                    \n\n\n            \n        \n\n    src/config/schemas/articles/articles.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AriticlesSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n  articleId: String,\n  autherId: String,\n  title: String,\n  body: String,\n  likes: Number,\n  isActive: Boolean,\n  isDeleted: Boolean,\n  createdAt: String,\n  updatedAt: String,\n})\n                        \n                    \n\n\n            \n        \n\n    src/config/schemas/comments/comments.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CommentsSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n  commentId: String,\n  artId: String,\n  userId: String,\n  body: String,\n  likes: Number,\n  isActive: Boolean,\n  isDeleted: Boolean,\n  createdAt: String,\n  updatedAt: String\n})\n                        \n                    \n\n\n            \n        \n\n    src/config/helper/helper.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            crypto\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('crypto')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iv\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '9e313bae8ffb4bcfaffb3f6a8a5592c1'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"36d851f4-3e68-4919-b6f9-24d335b8761e\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('uuid')\n                        \n                    \n\n\n            \n        \n\n    src/config/schemas/devices/devices.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DeviceSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n  deviceId: String,\n  userId: String,\n  detail: String,\n  isActive: Boolean,\n  isDeleted: Boolean,\n  isBlocked: Boolean,\n  createdAt: String,\n  updatedAt: String,\n})\n                        \n                    \n\n\n            \n        \n\n    src/config/schemas/reply/reply.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ReplySchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n  replyId: String,\n  commentId: String,\n  artId: String,\n  userId: String,\n  body: String,\n  likes: Number,\n  isActive: Boolean,\n  isDeleted: Boolean,\n  createdAt: String,\n  updatedAt: String\n})\n                        \n                    \n\n\n            \n        \n\n    src/config/schemas/user/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n  id: String,\n  username: String,\n  password: String,\n  firstName: String,\n  lastName: String,\n  image: String,\n  country: String,\n  mobileNumber: String,\n  countryCode: String,\n  address: String,\n  location: String,\n  role: String,\n  gender: String,\n  pirthDate: String,\n  email: String,\n  emailVirefy: Boolean,\n  mobileViryfy: Boolean,\n  isActive: Boolean,\n  isDeleted: Boolean,\n  isLogin: Boolean,\n  isBlocked: Boolean,\n  userToken: String,\n  oldPassword: String,\n  createdAt: String,\n  updatedAt: String,\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
